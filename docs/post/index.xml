<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Blog de programmation</title>
    <link>https://abarhub.github.io/blogprog/post/</link>
    <description>Recent content in Posts on Blog de programmation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 10 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://abarhub.github.io/blogprog/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Liste d&#39;outils </title>
      <link>https://abarhub.github.io/blogprog/post/liste_outils/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://abarhub.github.io/blogprog/post/liste_outils/</guid>
      <description>Liste d&amp;rsquo;outils en ligne de commande Outils généraux  Httpie : curl like jq : manipulate json Kafkahq : manage kafka bat : cat en rust exa : ls en rust fd : find en rust procs : ps en rust sd : find &amp;amp; replace en rust dust : du en rust starship : shell en rust ripgrep : grep en rust tokei : analyse du code source (nombre de lignes, nombre de fichiers, etc&amp;hellip;) hyperfine : pour faire des benchmark ytop : équivalent de top en Rust tealdeer : tldr en rust bandwhich : affichage des informations sur le réseau (débit, processus, etc&amp;hellip;) grex : génération d&amp;rsquo;expression régulière en fonction d&amp;rsquo;exemple rmesg : dmesg en rust zoxide : cd en rust delta : disualisation de diff git nushell : shell en rust angle-grinder : recherche dans les fichiers de logs visidata : visualisation de données tabulaires lnav : visualisation des logs dans un terminal coreutils : réimplémentation des outils unix en rust q : faire une requete sql en en ligne de commande sur du csv broot : affichage arborescent des répertoire, avec possibilité de faire des opérations rebond : recherche la stacktrace dans stackoverflow speed-test : test la connexion internet graphtage : comparaison de json jc : convertie en json la sortie des commandes unix rq : transformation entre différents formats (json, csv, etc&amp;hellip;) iredis : client redis gnuplot : Pour faire des graphiques en ligne de commandes (Hitogramme, courbes 2Det 3D, etc&amp;hellip;).</description>
    </item>
    
    <item>
      <title>Hello world en HTML</title>
      <link>https://abarhub.github.io/blogprog/post/helloworld_html/</link>
      <pubDate>Sun, 19 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://abarhub.github.io/blogprog/post/helloworld_html/</guid>
      <description>&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; &amp;lt;title&amp;gt;Example of HTML Hello world&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;p&amp;gt;Hello World&amp;lt;/p&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  </description>
    </item>
    
    <item>
      <title>Hello world en Python</title>
      <link>https://abarhub.github.io/blogprog/post/helloworld_python/</link>
      <pubDate>Sun, 12 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://abarhub.github.io/blogprog/post/helloworld_python/</guid>
      <description>def main(): print(&amp;quot;Hello World!&amp;quot;) if __name__ == &amp;quot;__main__&amp;quot;: main()  </description>
    </item>
    
    <item>
      <title>Validation xsd en gérant la résolution des xsd</title>
      <link>https://abarhub.github.io/blogprog/post/resolve_xsd/</link>
      <pubDate>Sun, 29 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://abarhub.github.io/blogprog/post/resolve_xsd/</guid>
      <description>Il faut implementer l&amp;rsquo;interface LSResourceResolver
public class ResourceResolver implements LSResourceResolver { public LSInput resolveResource(String type, String namespaceURI, String publicId, String systemId, String baseURI) { // note: in this sample, the XSD&#39;s are expected to be in the root of the classpath InputStream resourceAsStream = this.getClass().getClassLoader() .getResourceAsStream(systemId); return new Input(publicId, systemId, resourceAsStream); } }  Ensuite, l&amp;rsquo;appel se fait comme cela :
// note that if your XML already declares the XSD to which it has to conform, then there&#39;s no need to declare the schemaName here void validate(String xml, String schemaName) throws Exception { DocumentBuilderFactory builderFactory = DocumentBuilderFactory.newInstance(); builderFactory.setNamespaceAware(true); DocumentBuilder parser = builderFactory .</description>
    </item>
    
    <item>
      <title>Maven Dependancy</title>
      <link>https://abarhub.github.io/blogprog/post/maven-dependancy/</link>
      <pubDate>Sun, 18 Jul 2021 16:21:12 +0100</pubDate>
      
      <guid>https://abarhub.github.io/blogprog/post/maven-dependancy/</guid>
      <description>Pour récupérer les dépendances d&amp;rsquo;un projet maven : mvn dependency:tree
Pour récupérer les dépendances d&amp;rsquo;un projet maven, et mettre le résultat dans un fichier : mvn dependency:tree -DoutputFile=/path/to/file
Pour que le résultat soit dans un format spécial : mvn dependency:tree -DoutputFile=/path/to/file.graphml -DoutputType=graphml
Les sortie possibles sont :
 text dot graphml tgf  </description>
    </item>
    
    <item>
      <title>Externalisation de la configuration avec spring boot</title>
      <link>https://abarhub.github.io/blogprog/post/external_config_spring_boot/</link>
      <pubDate>Tue, 29 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://abarhub.github.io/blogprog/post/external_config_spring_boot/</guid>
      <description>Exemple avec le paramtre spring.config.location :  java -jar app.jar --spring.config.location=file:///Users/home/config/jdbc.properties   Autre exemple avec les paramètres spring.config.location et spring.config.name :  java -jar app.jar --spring.config.name=application,jdbc --spring.config.location=file:///Users/home/config   Exemple avec une variable d&amp;rsquo;environnement :  export SPRING_CONFIG_LOCATION=file:///Users/home/config java -jar app.jar   Exemple avec spring.config.import :  spring.config.import=file:./additional.properties,optional:file:/Users/home/config/jdbc.properties   Exemple avec spring.config.additional-location :  java -jar app.jar --spring.config.additional-location=file:///Users/home/config/  Voir ici : https://www.baeldung.com/spring-properties-file-outside-jar https://docs.spring.io/spring-boot/docs/1.0.1.RELEASE/reference/html/boot-features-external-config.html</description>
    </item>
    
    <item>
      <title>Débugage avec Angular</title>
      <link>https://abarhub.github.io/blogprog/post/debug_angular/</link>
      <pubDate>Sat, 08 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://abarhub.github.io/blogprog/post/debug_angular/</guid>
      <description>Debugage avec Angular :
 Everything you need to know about debugging Angular applications A Guide To Debugging Angular Applications Augury Debug Angular 9 in 60 Seconds Debug Angular 9: Interacting with Components Définition ng  Exemple de code :
ng.getComponent($0); ng.getContext($0);  </description>
    </item>
    
    <item>
      <title>Documentation Officiel de Java</title>
      <link>https://abarhub.github.io/blogprog/post/java_doc/</link>
      <pubDate>Sun, 25 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://abarhub.github.io/blogprog/post/java_doc/</guid>
      <description>Documentation officielle de Java Java 8 :  Documentation Javadoc JDK JRE  Java 11 :  Documentation Javadoc JDK  Autre  Liste des JDK à telecharger  </description>
    </item>
    
    <item>
      <title>Exemple de ngclass</title>
      <link>https://abarhub.github.io/blogprog/post/ngclass_angular/</link>
      <pubDate>Sun, 25 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://abarhub.github.io/blogprog/post/ngclass_angular/</guid>
      <description>Exemple de ngclass : &amp;lt;p [ngClass]=&amp;quot;&#39;first second&#39;&amp;quot;&amp;gt;...&amp;lt;/p&amp;gt; &amp;lt;p [ngClass]=&amp;quot;[&#39;first&#39;, &#39;second&#39;]&amp;quot;&amp;gt;...&amp;lt;/p&amp;gt; &amp;lt;p [ngClass]=&amp;quot;{&#39;first&#39;: true, &#39;second&#39;: false}&amp;quot;&amp;gt;...&amp;lt;/p&amp;gt; &amp;lt;p [ngClass]=&amp;quot;stringExp|arrayExp|objExp&amp;quot;&amp;gt;...&amp;lt;/p&amp;gt; &amp;lt;p [ngClass]=&amp;quot;{&#39;class1 class2 class3&#39; : true}&amp;quot;&amp;gt;...&amp;lt;/p&amp;gt;  Pour d&amp;rsquo;autres exemples, voir ici ou ici</description>
    </item>
    
    <item>
      <title>Débugage spring </title>
      <link>https://abarhub.github.io/blogprog/post/debug_spring/</link>
      <pubDate>Sat, 06 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://abarhub.github.io/blogprog/post/debug_spring/</guid>
      <description>Pour débuguer Spring boot, il y a 2 options :
 &amp;ndash;debug : affiche les modules de spring boot activés ou pas activé &amp;ndash;trace : affiche plus d&amp;rsquo;information, notemment la recherche de fichiers et les paramètres de configuration  Exemple d&amp;rsquo;utilisation :
java -Ddebug monjar.jar  ou
java monjar.jar --debug  On peut aussi augmenter le niveau de log (a mettre dans application.properties) :
logging.level.org.springframework=DEBUG  pour spring security, c&amp;rsquo;est dans le code :
// par annotation : @EnableWebSecurity(debug = true) public class SecurityConfiguration extends WebSecurityConfigurerAdapter { // etc... }  // par code : @EnableWebSecurity public class WebSecurityConfiguration extends WebSecurityConfigurerAdapter { @Override public void configure(WebSecurity web) throws Exception { web.</description>
    </item>
    
    <item>
      <title>Spring security OAuth 2 documentation</title>
      <link>https://abarhub.github.io/blogprog/post/spring_security_oauth2_doc/</link>
      <pubDate>Sun, 31 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://abarhub.github.io/blogprog/post/spring_security_oauth2_doc/</guid>
      <description> Les versions de spring security La liste des documentations Le guide du developpeur Le guide de migration La documentation détaillée Comment l&amp;rsquo;implementé avec un SPA Implicit Flow La liste des librairies certifiée Open Id Connect  </description>
    </item>
    
    <item>
      <title>In-post APlayer Test</title>
      <link>https://abarhub.github.io/blogprog/post/aplayer-test/</link>
      <pubDate>Sun, 10 Jan 2021 00:00:00 +0800</pubDate>
      
      <guid>https://abarhub.github.io/blogprog/post/aplayer-test/</guid>
      <description>&lt;div class=&#34;post-player-wrapper&#34;&gt;
  &lt;div
    class=&#34;post-aplayer&#34;
    data-urls=&#34;/theme/hugo-theme-fuji/aplayer/berlin.mp3&#34;
    data-names=&#34;Berlin&#34;
    data-artists=&#34;Crowander&#34;
    data-covers=&#34;/theme/hugo-theme-fuji/aplayer/crowander.jpg&#34;
  &gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;This post is for in-post APlayer test, above is previous post-player.&lt;/p&gt;
&lt;p&gt;Music files are all downloaded from &lt;a href=&#34;https://freemusicarchive.org&#34; target=&#34;_blank&#34;&gt;Free Music Archive&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Markdown Syntax</title>
      <link>https://abarhub.github.io/blogprog/post/markdown-syntax/</link>
      <pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://abarhub.github.io/blogprog/post/markdown-syntax/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;
&lt;h2 id=&#34;headings&#34;&gt;Headings&lt;/h2&gt;
&lt;p&gt;The following HTML &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;—&lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt; elements represent six levels of section headings. &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; is the highest section level while &lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt; is the lowest.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Math Typesetting</title>
      <link>https://abarhub.github.io/blogprog/post/math-typesetting/</link>
      <pubDate>Sun, 08 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://abarhub.github.io/blogprog/post/math-typesetting/</guid>
      <description>&lt;p&gt;Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.&lt;/p&gt;
&lt;p&gt;In this example we will be using &lt;a href=&#34;https://katex.org/&#34; target=&#34;_blank&#34;&gt;KaTeX&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a partial under &lt;code&gt;/layouts/partials/math.html&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Within this partial reference the &lt;a href=&#34;https://katex.org/docs/autorender.html&#34; target=&#34;_blank&#34;&gt;Auto-render Extension&lt;/a&gt; or host these scripts locally.&lt;/li&gt;
&lt;li&gt;Include the partial in your templates like so:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;{{ if or .Params.math .Site.Params.math }}
{{ partial &amp;quot;math.html&amp;quot; . }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;To enable KaTex globally set the parameter &lt;code&gt;math&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in a project&amp;rsquo;s configuration&lt;/li&gt;
&lt;li&gt;To enable KaTex on a per page basis include the parameter &lt;code&gt;math: true&lt;/code&gt; in content files.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Placeholder Text</title>
      <link>https://abarhub.github.io/blogprog/post/placeholder-text/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://abarhub.github.io/blogprog/post/placeholder-text/</guid>
      <description>&lt;p&gt;Lorem est tota propiore conpellat pectoribus de
pectora summo. Redit teque digerit hominumque toris verebor lumina non cervice
subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc
caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis
lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emoji Support</title>
      <link>https://abarhub.github.io/blogprog/post/emoji-support/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://abarhub.github.io/blogprog/post/emoji-support/</guid>
      <description>&lt;p&gt;Emoji can be enabled in a Hugo project in a number of ways.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://gohugo.io/functions/emojify/&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;emojify&lt;/code&gt;&lt;/a&gt; function can be called directly in templates or &lt;a href=&#34;https://gohugo.io/templates/shortcode-templates/#inline-shortcodes&#34; target=&#34;_blank&#34;&gt;Inline Shortcodes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To enable emoji globally, set &lt;code&gt;enableEmoji&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in your site’s &lt;a href=&#34;https://gohugo.io/getting-started/configuration/&#34; target=&#34;_blank&#34;&gt;configuration&lt;/a&gt; and then you can type emoji shorthand codes directly in content files; e.g.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:s ee_no_evil:[Remove the space]&lt;/code&gt; 🙈 &lt;code&gt;:h ear_no_evil:[Remove the space]&lt;/code&gt; 🙉 &lt;code&gt;:s peak_no_evil:[Remove the space]&lt;/code&gt; 🙊&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CJK Unicode Test</title>
      <link>https://abarhub.github.io/blogprog/post/cjk-unicode-test/</link>
      <pubDate>Fri, 09 Mar 2018 00:00:00 +0800</pubDate>
      
      <guid>https://abarhub.github.io/blogprog/post/cjk-unicode-test/</guid>
      <description>&lt;p&gt;The following is part of the CJK text, this page is for test use only.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>纯简体中文测试文章</title>
      <link>https://abarhub.github.io/blogprog/post/wtf-article/</link>
      <pubDate>Sat, 01 Apr 2017 00:00:00 +0800</pubDate>
      
      <guid>https://abarhub.github.io/blogprog/post/wtf-article/</guid>
      <description>&lt;p&gt;本文内容无实际意义，由狗屁不通文章生成器自动生成，不代表作者本人观点。&lt;/p&gt;
&lt;p&gt;可是，即使是这样，一段代码写一天的出现仍然代表了一定的意义。一段代码写一天，到底应该如何实现。马克思在不经意间这样说过，一切节省，归根到底都归结为时间的节省。这不禁令我深思。马克思曾经说过，一切节省，归根到底都归结为时间的节省。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
