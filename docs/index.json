[{"body":"","link":"https://abarhub.github.io/blogprog/","section":"","tags":null,"title":""},{"body":"","link":"https://abarhub.github.io/blogprog/tags/cli/","section":"tags","tags":null,"title":"Cli"},{"body":"La commande find\n1find . -name \u0026#34;main.c\u0026#34; -print les parametres de recherche :\n-name XXX : le nom du fichier recherche -path XXX : recherche sur le chemin complet c-a-d le nom du fichier et le répertoire -maxdepth n: rechercher sur une profondeur maximale de n les parametres action :\n-print : affiche le résultat. si aucune action n'est renseigné -exec XXX : execute la commande sur chaque fichier retrouvé, le parametre est {}. par exemple : find /home/debianos -user debianos -type f -exec ls -l {} \\; ","link":"https://abarhub.github.io/blogprog/post/commande_find/","section":"post","tags":["cli","linux","shell"],"title":"Commande find"},{"body":"Pour créer un environnement Python, il faut exeucter la commande\n1python3 -m venv ./path-to-new-venv Sous windows, la commande est\n1py -m venv ./path-to-new-venv ","link":"https://abarhub.github.io/blogprog/post/create_env_python/","section":"post","tags":["cli","linux","shell","windows","python"],"title":"Création d'un environnement python"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/index/","section":"tags","tags":null,"title":"Index"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/linux/","section":"tags","tags":null,"title":"Linux"},{"body":"","link":"https://abarhub.github.io/blogprog/post/","section":"post","tags":["index"],"title":"Posts"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/python/","section":"tags","tags":null,"title":"Python"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/shell/","section":"tags","tags":null,"title":"Shell"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/windows/","section":"tags","tags":null,"title":"Windows"},{"body":"Commande grep Recherche le text void sur les fichiers du répertoire courant\n1grep void Recherche dans le sous répertoire les fichiers avec l'extension c\n1grep void src/*.c Affiche les numéro de lignes\n1grep -n void *.c Recherche dans les sous répertoire\n1grep -r void *.c Options interressante :\nA n : affiche n lignes avant B n : affcihe n lignes apres C n : affiche n lignes avant et apres n : affiche le numéro de ligne e regex : recherche suivant une regex ","link":"https://abarhub.github.io/blogprog/post/grep/","section":"post","tags":["cli","linux","shell"],"title":"description de grep"},{"body":"Pour désactiver la led du raspberry pi zero 2, il faut lancer la commande :\n1shell\u0026gt; echo 0 | sudo tee /sys/class/leds/ACT/brightness pour qu'il soit lancer au démarrage, il faut l'ajouter dans le /etc/profile.d :\n1shell\u0026gt; sudo echo \u0026gt;/etc/profile.d/stopled.sh \u0026lt;\u0026lt;EOL 2 3# eteint la led du raspberry pi zero 2 4echo 0 | sudo tee /sys/class/leds/ACT/brightness 5 6EOL ","link":"https://abarhub.github.io/blogprog/post/disable_led_rpi_zero2/","section":"post","tags":["cli","linux","shell","raspberrypi"],"title":"Désactivation de la led pour le raspberry pi zero 2"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/raspberrypi/","section":"tags","tags":null,"title":"Raspberrypi"},{"body":"Commandes Linux équivalentes sous Windows Recehrche de fichiers contenant un texte 1DOS\u0026gt; findstr text *.* 2DOS\u0026gt; findstr text c:\\repertoire\\*.txt 3# dans les sous répertoires 4DOS\u0026gt; findstr /S text *.* 1PowerShell\u0026gt; Select-String -Path \u0026#34;C:\\repertoire\\*.csv\u0026#34; -Pattern \u0026#34;texte\u0026#34; 2PowerShell\u0026gt; Get-ChildItem -Path C:\\repertoire\\*.txt -Recurse | Select-String -Pattern \u0026#39;Texte\u0026#39; -CaseSensitive Recherche de fichiers par le nom 1DOS\u0026gt; dir /b/s *.txt 2DOS\u0026gt; dir /s *foo* 1PowerShell\u0026gt; Get-ChildItem -Path .\\* -Include *.mp4 -Recurse 2PowerShell\u0026gt; Get-ChildItem -Recurse -Path C:\\ | Where-Object {$_.Length gt 1MB} 3PowerShell\u0026gt; Get-ChildItem -Path .\\* -Include *.mp4 -Recurse | Where-Object { $_.CreationTime -lt \u0026#39;2024-01-01\u0026#39; } 4# exclu des fichiers. Semble ne fonctionner que pour les fichiers, et pas pour les répertoires 5PowerShell\u0026gt; Get-ChildItem -Path . -Recurse -Exclude (\u0026#39;node_modules\u0026#39;, \u0026#39;node\u0026#39;, \u0026#39;target\u0026#39;,\u0026#39;*.jar\u0026#39;) -File Appel url / telechargement de fichiers 1PowerShell\u0026gt; Invoke-WebRequest https://www.google.fr 2PowerShell\u0026gt; Invoke-WebRequest -Proxy \u0026#34;http://proxy.hostname:8090/\u0026#34; https://www.google.fr 3PowerShell\u0026gt; Invoke-WebRequest -NoProxy https://www.google.fr 4PowerShell\u0026gt; Invoke-WebRequest -SkipCertificateCheck https://www.google.fr 5PowerShell\u0026gt; Invoke-WebRequest [$myDownloadUrl](https://www.google.fr) -OutFile c:\\temp\\file.html 6PowerShell\u0026gt; Invoke-WebRequest \u0026#34;https://httpbin.org/ip\u0026#34; Commandes équilavantes à jq 1# curl \u0026#34;https://api.example.com/data\u0026#34; | jq \u0026#39;.someField\u0026#39; 2 3# URL de l\u0026#39;API 4$url = \u0026#34;https://api.example.com/data\u0026#34; 5 6# Appeler l\u0026#39;API et obtenir l\u0026#39;objet JSON 7# Invoke-RestMethod convertit automatiquement la réponse JSON en un objet PowerShell 8$jsonData = Invoke-RestMethod -Uri $url 9 10# Accéder au champ souhaité (remplacez \u0026#39;someField\u0026#39; par le nom de votre champ) 11$fieldValue = $jsonData.someField 12 13# Afficher la valeur du champ 14Write-Host \u0026#34;La valeur du champ est : $fieldValue\u0026#34; 15 16# Si le champ est imbriqué, par exemple .data.item 17# $fieldValue = $jsonData.data.item 1PowerShell\u0026gt; (Invoke-RestMethod -Uri \u0026#34;https://api.example.com/data\u0026#34;).someField(Invoke-RestMethod -Uri \u0026#34;https://api.example.com/data\u0026#34;).someField ","link":"https://abarhub.github.io/blogprog/post/equivalent_windows/","section":"post","tags":["cli","windows","shell"],"title":"Commandes équivalentes aux commandes Linux sous Windows"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/devoxx/","section":"tags","tags":null,"title":"DEVOXX"},{"body":"Mercredi 16 avril Hibernate batch size à mettre entre 20 et 50 ajouter l'ordre sur les requetes sql si plusieurs entités faire plusieurs requetes sur les mêmes objets, en mettant une jointure différente pour éviter un produit cartesien pour le in, si pas trop gros, gérer le boublement de la requete. Faire attention à la limite de taille désactiver les open in view activer les statistics Hibernate et performance : reprenez la main https://www.youtube.com/watch?v=E2P4rB5YNlQ\nMemory Memory API : Patterns, Performance et Cas d'Utilisation https://www.youtube.com/watch?v=l9ZPkVBxOSU\nGaterer C'est très souple\nL'API Gatherer : l'outil qui manquait à vos Streams https://www.youtube.com/watch?v=__piR-N9pXA\nOpen Rewrite permet de gérer les transformations en yml. S'il faut le faire en java, c'est pas trop compliqué\nÉcrire l’avenir de son code avec OpenRewrite https://www.youtube.com/watch?v=cEJcrlcshiE\nNull Safety C'est implémenté pour spring boot 4 c'est pas trop complexe à utiliser\nNull Safety en Java avec JSpecify et NullAway https://www.youtube.com/watch?v=F_Qyo1cCpvY\nJeudi 17 avril Architecture C'est toujours en modification faire simple\nLes clés de l’architecture pour les devs https://www.youtube.com/watch?v=ZoYDxF_7LoI\nOpenid Connect toujours vérifier l'audience il existe des librairies en javascript utiliser le worker plutot que faire les appel directe. Cela permet que le token n'est pas exposé directement dans le javascript. Par contre, il y a un risque qu'il soit supprimer et qu'il faille recréer le token Explication du token jwt, d'id token, d'id access, et d'id refresh\nGestion des incidents Page de status interne et aussi externe pour les clients incident manager incident.io\nAlerte, tout brûle ! Maîtrisez les incidents techniques https://www.youtube.com/watch?v=Xjn2rfKC9cA\nMockoon intégration de fichier open api en yml Génération de donnée faker proxy crud\nMockoon : Les bouchons contre-attaquent ! https://www.youtube.com/watch?v=p_nz22-2VXU\nAutorisation nouveau standard\nKeycloak utilisation des attributs ils peuvent être attaché à l'utilisateur ou au groupe s'il y a beaucoups de valeurs, il faut mieux le récupérer avec le user info, et pas dans le jwt\nElasticsearch nouveau langage ES QL à partir de 8.17 ou 9.0 select jointure d'index semble puissant et souple kibana faire de l'autocompletion\nElasticsearch Query Language: ES|QL https://www.youtube.com/watch?v=8bw81NIkH60\nVendrdi 18 avril Open Rewrite Semble facile à utiliser\nOpenRewrite: Refactoring as code https://www.youtube.com/watch?v=aYHb7sLhsoQ\nSignal explication sur l'implémentation dans Angular et les autres framework (VueJS, React, etc...)\nOrdinateur Quantique A tester Il faut comprendre pour tester dans la course\nIA Problèmes de sécurité avec les MCP, mais très puissant\nConstruire une IA agentique avec les Structured Outputs, Function Calling et MCP https://www.youtube.com/watch?v=sZOFEEhR4QY\nvu :\na voir :\nL'API viewTransition : une révolution pour le web ? https://www.youtube.com/watch?v=gVYEjvEWPgI\nNo Estimate: Créer une culture d'équipe favorisant son adoption naturellement https://www.youtube.com/watch?v=cFOelvnNROI\nÀ la découverte du code golf ⛳ https://www.youtube.com/watch?v=8GabGdiIrA8\nFlakiness : Quand tester, c’est vraiment douter https://www.youtube.com/watch?v=CFXMYZmXfAc\nEt si Git n’était pas toujours la réponse ? Alternatives avec Pijul et Darcs https://www.youtube.com/watch?v=DoksVwNnmdk\nGo sans fioritures : quand le standard suffit https://www.youtube.com/watch?v=5zqkv24IdOg\nDagger Modules : un couteau suisse pour moderniser vos pipelines de CI/CD https://www.youtube.com/watch?v=4kgzeexVZo4\nSi l’enfer existe, on y trouve des devs qui gérent des clés de chiffrement https://www.youtube.com/watch?v=hVgVzLP7x4c\nUne revue de code qui traîne ?....Ship, Show, Ask https://www.youtube.com/watch?v=acS1tVScTyc\nUne identité pour les fédérer toutes ! https://www.youtube.com/watch?v=aN4rvdbDMy8\nJib : Osez le Dockerless pour vos projets Java ! https://www.youtube.com/watch?v=uRb_ZHz9KT8\nJohn Doe et Jhon Doe sont dans un bateau : la magie derrière l'Entity Resolution https://www.youtube.com/watch?v=mseWbw7SAwg\nPour une autre idée de la CI, sur la machine du développeur, avec Dagger https://www.youtube.com/watch?v=odL8ehCnS58\nNoEstimates vs Story Points : fact-checking dessiné https://www.youtube.com/watch?v=xHs6vqIuBtE\n403 Forbidden - Panorama de la gestion des autorisations https://www.youtube.com/watch?v=Yz2cY7K_qdM\nMaîtriser les Tests de Code Asynchrone https://www.youtube.com/watch?v=xEqH9ETy9JM\nAstro GitOps - Press ⓧ to start https://www.youtube.com/watch?v=nIW_VN3-QDw\nVos requêtes SQL jusqu'à 10000 fois plus rapides, durablement. https://www.youtube.com/watch?v=TAJKNBPv4Wc\nHTMX, ou le retour de l'AJAX dans le développement Web https://www.youtube.com/watch?v=O0LQuErwxho\nGitflow c'est bien, Gitbutler c'est mieux ! https://www.youtube.com/watch?v=KPmyngwPQKU\nTestez en end-to-end ce qui compte vraiment pour vos utilisateurs avec Gravity https://www.youtube.com/watch?v=4jFXU16knK4\nSoyez plus productif avec IntelliJ IDEA https://www.youtube.com/watch?v=8YWD9tcoZPc\n","link":"https://abarhub.github.io/blogprog/post/devoxx_2025/","section":"post","tags":["DEVOXX"],"title":"Devoxx du 16 au 18 avril 2025"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/oracle/","section":"tags","tags":null,"title":"Oracle"},{"body":" 1DECLARE 2 v_max_id NUMBER; 3BEGIN 4 -- Récupèrer le dernier ID utilisé dans la table 5 SELECT COALESCE(MAX(id), 0) INTO v_max_id FROM mon_schema.ma_table; 6 7 -- Repositionner la séquence pour démarrer au bon endroit 8 EXECUTE IMMEDIATE \u0026#39;ALTER SEQUENCE mon_schema.SEQ_ma_sequence RESTART START WITH \u0026#39; || (v_max_id + 1) ; 9 10 DBMS_OUTPUT.PUT_LINE(\u0026#39;Séquence repositionnée à \u0026#39; || (v_max_id + 1)); 11END; 12/ ","link":"https://abarhub.github.io/blogprog/post/reinitialise_sequence.sql/","section":"post","tags":["sql","oracle"],"title":"Réinitialisation d'une sequence par rapport à l'id d'une table"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/sql/","section":"tags","tags":null,"title":"Sql"},{"body":" 1-- suppression de la contrainte not null du champs mon_schema.ma_table.mon_champs 2declare 3 fName varchar2(255 char); 4begin 5 SELECT x.constraint_name into fName FROM all_constraints x 6 JOIN all_cons_columns c ON 7 c.table_name = x.table_name AND c.constraint_name = x.constraint_name 8 WHERE x.table_name = \u0026#39;ma_table\u0026#39; AND x.OWNER=\u0026#39;mon_schema\u0026#39; AND x.constraint_type = \u0026#39;C\u0026#39; AND c.column_name =\u0026#39;mon_champs\u0026#39;; 9 10 if fName is not null THEN 11 execute immediate \u0026#39;ALTER TABLE \u0026#34;mon_schema\u0026#34;.\u0026#34;ma_table\u0026#34; DROP CONSTRAINT \u0026#39; || fName; 12 end if; 13end; 14/ ","link":"https://abarhub.github.io/blogprog/post/supprime_check_not_null.sql/","section":"post","tags":["oracle","sql"],"title":"Supprime la contrainte not null d'une colonne dont le nom de la contrainte n'est pas connue. Spécifique à Oracle"},{"body":"import json import os import subprocess import sys import xml.etree.ElementTree as ET from datetime import date, datetime import time\nfrom boltons.iterutils import remap\n'''\njq . projet_240928_182342.json\njq .[].nom projet_240928_182342.json\njq .[].nom,.[].modules[].name projet_240928_182342.json\njq \u0026quot;[ .[] | {nom_module: .modules[].name} ]\u0026quot; projet_240928_182342.json\njq \u0026quot;[ .[] | . as $parent | {nom_module: .modules[].name, projet: $parent.nom} ]\u0026quot; projet_240928_182342.json\nPour lister le nom des produits : jq \u0026quot;[ .[] | . as $parent | {nom_module: .modules[].name, projet: $parent.nom} ]\u0026quot; projet_240929_131613.json\nPour lister la version d'angular : jq \u0026quot;[ .[] | . as $parent | {nom_module: .modules[].name, projet: $parent.nom, angular: .modules[].packageJson.dependencies.\u0026quot;@angular/core\u0026quot;} ]\u0026quot; projet_240929_131613.json\nPour lister la version de java : jq \u0026quot;[ .[] | . as $parent | {nom_module: .modules[].name, projet: $parent.nom, java: .modules[].pom.properties.\u0026quot;java.version\u0026quot;} ]\u0026quot; projet_240929_131613.json\nPour lister la version du projet : jq \u0026quot;[ .[] | . as $parent | {nom_module: .modules[].name, projet: $parent.nom, version_projet: .modules[].pom.effectivePom.version.version} ]\u0026quot; projet_240929_131613.json\nPour lister le groupId, l'artifactId et la version des projets : jq \u0026quot;[ .[] | . as $parent | {nom_module: .modules[].name, projet: $parent.nom, version_projet: ( .modules[].pom.effectivePom.version.groupId + \u0026quot;:\u0026quot; + .modules[].pom.effectivePom.version.artifactId + \u0026quot;:\u0026quot; + .modules[].pom.effectivePom.version.version ) } ]\u0026quot; projet_240929_131613.json\n'''\nclass Parametres:\ndef __init__(self):\rself.repertoires = []\rself.repertoires_ignore = []\rself.debug = False\rclass ErreurRunMvnException(Exception): pass\nclass ErreurRunGitException(Exception): pass\ndef is_git_repo(path): \u0026quot;\u0026quot;\u0026quot;Vérifie si un répertoire est un repo git.\u0026quot;\u0026quot;\u0026quot; return os.path.isdir(os.path.join(path, \u0026quot;.git\u0026quot;))\ndef parse_pom(pom_path): tree = ET.parse(pom_path) root = tree.getroot()\n# Espaces de noms (pour éviter les erreurs lors de la recherche d'éléments dans le fichier XML)\rnamespaces = {'maven': 'http://maven.apache.org/POM/4.0.0'}\r# Récupérer les informations du parent s'il existe\rparent = root.find('maven:parent', namespaces)\rparent_info = {}\rif parent is not None:\rif parent.find('maven:groupId', namespaces) is not None:\rparent_info['groupId'] = parent.find('maven:groupId', namespaces).text\rif parent.find('maven:artifactId', namespaces) is not None:\rparent_info['artifactId'] = parent.find('maven:artifactId', namespaces).text\rif parent.find('maven:version', namespaces) is not None:\rparent_info['version'] = parent.find('maven:version', namespaces).text\rversion_projet = {}\rroot.find('maven:parent', namespaces)\rif root.find('maven:groupId', namespaces) is not None:\rversion_projet['groupId'] = root.find('maven:groupId', namespaces).text\rif root.find('maven:artifactId', namespaces) is not None:\rversion_projet['artifactId'] = root.find('maven:artifactId', namespaces).text\rif root.find('maven:version', namespaces) is not None:\rversion_projet['version'] = root.find('maven:version', namespaces).text\r# Récupérer les propriétés s'il existe\rproperties = root.find('maven:properties', namespaces)\rprops = {}\rif properties is not None:\rfor prop in properties:\rprops[prop.tag.split('}')[-1]] = prop.text\rreturn parent_info, props, version_projet\rdef parse_pom_xml(pom_path, debug): \u0026quot;\u0026quot;\u0026quot;Parse le fichier pom.xml et extrait les informations du parent et des propriétés.\u0026quot;\u0026quot;\u0026quot;\nparent_info, props, version_projet = parse_pom(pom_path)\r# les dépendances\rdependances = None\reffectivePom = None\rtry:\rcurrentDir = os.getcwd()\routpoutFile = f'{currentDir}/data/dependency.json'\rcommand = f\u0026quot;mvn dependency:3.8.0:tree -DoutputType=json -DoutputFile={currentDir}/data/dependency.json -DoutputEncoding=utf8\u0026quot;\rrepo_path = os.path.dirname(pom_path)\rresult = subprocess.run(command, cwd=repo_path, shell=True, capture_output=True, text=True)\rif debug or result.returncode != 0:\rprint(\u0026quot;dependancy tree output:\u0026quot; + result.stdout)\rprint(\u0026quot;dependancy tree error:\u0026quot; + result.stderr)\rif result.returncode != 0:\rraise ErreurRunMvnException(f\u0026quot;Erreur lors de l'exécution de la commande {command}: {result.stderr}\u0026quot;)\rif os.path.isfile(outpoutFile):\rwith open(outpoutFile, 'r', encoding='utf-8') as file:\rdata = json.load(file)\rif data is not None:\rbad_keys = {'classifier', 'type', 'classifier', 'optional'}\rdrop_keys = lambda path, key, value: key not in bad_keys\rclean = remap(data, visit=drop_keys)\rif clean is not None:\rdependances = clean\r# analyse effective pom\routpoutFile = f'{currentDir}/data/effectivePom.xml'\rcommand = f\u0026quot;mvn help:effective-pom -Doutput={outpoutFile}\u0026quot;\rrepo_path = os.path.dirname(pom_path)\rresult = subprocess.run(command, cwd=repo_path, shell=True, capture_output=True, text=True)\rif debug or result.returncode != 0:\rprint(\u0026quot;effective-pom output:\u0026quot; + result.stdout)\rprint(\u0026quot;effective-pom error:\u0026quot; + result.stderr)\rif result.returncode != 0:\rraise ErreurRunMvnException(f\u0026quot;Erreur lors de l'exécution de la commande {command}: {result.stderr}\u0026quot;)\rif os.path.isfile(outpoutFile):\rparent_info_effective, props_effective, version_projet_effective = parse_pom(outpoutFile)\rif parent_info_effective is not None or props_effective is not None or version_projet_effective is not None:\reffectivePom = {}\rif parent_info_effective is not None:\reffectivePom['parent_info'] = parent_info_effective\rif version_projet_effective is not None:\reffectivePom['version'] = version_projet_effective\rif props_effective is not None:\reffectivePom['properties'] = props_effective\rexcept ErreurRunMvnException as e:\rdetails = e.args[0]\rprint(f\u0026quot;Erreur pour analyser le pom {pom_path} : {details}\u0026quot;)\rreturn parent_info, props, version_projet, dependances, effectivePom\rdef parse_package_json(package_path): \u0026quot;\u0026quot;\u0026quot;Parse le fichier package.json et extrait la version d'Angular/CLI s'il existe.\u0026quot;\u0026quot;\u0026quot; mapVersion = {} with open(package_path, 'r', encoding='utf-8') as file: data = json.load(file) dependencies = data.get('dependencies', {}) devDependencies = data.get('devDependencies', {}) if dependencies is not None: mapVersion['dependencies'] = dependencies if devDependencies is not None: mapVersion['devDependencies'] = devDependencies name = data.get('name', {}) if name is not None: mapVersion['name'] = name version = data.get('version', {}) if version is not None: mapVersion['version'] = version scripts = data.get('scripts', {}) if scripts is not None: mapVersion['scripts'] = scripts\nreturn mapVersion\rdef run_git_command(command, repo_path): \u0026quot;\u0026quot;\u0026quot;Exécute une commande git et retourne la sortie.\u0026quot;\u0026quot;\u0026quot; result = subprocess.run(command, cwd=repo_path, shell=True, capture_output=True, text=True) if result.returncode != 0: raise ErreurRunGitException(f\u0026quot;Erreur lors de l'exécution de la commande {command}: {result.stderr}\u0026quot;) return result.stdout\ndef get_branch_info(branch): \u0026quot;\u0026quot;\u0026quot;Extrait les informations d'une branche (nom, date, hash court, message de commit).\u0026quot;\u0026quot;\u0026quot; parts = branch.split(maxsplit=5) short_commit = parts[0] date_str = parts[1] + \u0026quot; \u0026quot; + parts[2] + \u0026quot; \u0026quot; + parts[3] if len(parts) \u0026gt; 3 else \u0026quot;\u0026quot; # print(f\u0026quot;{short_commit}: {date_str}!{parts}\u0026quot;) date = datetime.strptime(date_str, \u0026quot;%Y-%m-%d %H:%M:%S %z\u0026quot;) if len(date_str) \u0026gt; 0 else None name = parts[4] if len(parts) \u0026gt; 3 else \u0026quot;\u0026quot; message = parts[5] if len(parts) \u0026gt; 4 else \u0026quot;\u0026quot; return short_commit, date, message, name\ndef has_uncommitted_changes(repo_path): \u0026quot;\u0026quot;\u0026quot;Vérifie s'il y a des fichiers non commités dans le dépôt.\u0026quot;\u0026quot;\u0026quot; status_output = run_git_command(\u0026quot;git status --porcelain\u0026quot;, repo_path) if status_output.strip(): # Si la sortie n'est pas vide, il y a des changements non commités return True return False\ndef get_local_branche(repo_path) -\u0026gt; str: \u0026quot;\u0026quot;\u0026quot;Vérifie s'il y a des fichiers non commités dans le dépôt.\u0026quot;\u0026quot;\u0026quot; status_output = run_git_command(\u0026quot;git rev-parse --abbrev-ref HEAD\u0026quot;, repo_path) res = status_output.strip() if res: # Si la sortie n'est pas vide, il y a des changements non commités return res return None\ndef fetch_and_list_branches(repo_path): # Étape 1: Faire un git fetch try: run_git_command(\u0026quot;git fetch --all\u0026quot;, repo_path) except ErreurRunGitException as e: details = e.args[0] print(f\u0026quot;Erreur pour executer git {repo_path} : {details}\u0026quot;) return None, None, None, None\nlocalBranche = get_local_branche(repo_path)\r# Étape 3: Obtenir les 5 dernières branches distantes\rremote_branches_output = run_git_command(\r\u0026quot;git for-each-ref --sort=-committerdate --format=\\\u0026quot;%(objectname:short) %(committerdate:iso8601) %(refname:short) %(contents:subject)\\\u0026quot; refs/remotes --count=5\u0026quot;,\rrepo_path\r)\rremote_branches = []\r# list_remote_branche=[]\rfor line in remote_branches_output.strip().split(\u0026quot;\\n\u0026quot;):\rif line:\rshort_commit, date, message, nameBranche2 = get_branch_info(line)\rliste = line.split()\rif len(liste) \u0026gt;= 2:\rbranch_name = nameBranche2 # liste[2]\rremote_branches.append({\r\u0026quot;name\u0026quot;: branch_name,\r\u0026quot;commit\u0026quot;: short_commit,\r\u0026quot;date\u0026quot;: date.isoformat(),\r\u0026quot;message\u0026quot;: message\r})\r# list_remote_branche.append(branch_name)\r# Étape 2: Obtenir les 5 dernières branches locales\rlocal_branches_output = run_git_command(\r\u0026quot;git for-each-ref --sort=-committerdate --format=\\\u0026quot;%(objectname:short) %(committerdate:iso8601) %(refname:short) %(contents:subject)\\\u0026quot; refs/heads --count=5\u0026quot;,\rrepo_path\r)\r# print(local_branches_output)\rlocal_branches = []\rfor line in local_branches_output.strip().split(\u0026quot;\\n\u0026quot;):\rif line:\r# print(f'line: {line}')\rshort_commit, date, message, nameBranche = get_branch_info(line)\rliste = line.split()\rif len(liste) \u0026gt;= 2:\rbranch_name = nameBranche # liste[2]\rbranche_module = {\r\u0026quot;name\u0026quot;: branch_name,\r\u0026quot;commit\u0026quot;: short_commit,\r\u0026quot;date\u0026quot;: date.isoformat(),\r\u0026quot;message\u0026quot;: message\r}\rlocal_branches.append(branche_module)\rif localBranche is not None and localBranche == branch_name:\rbranche_module[\u0026quot;current\u0026quot;] = True\rliste_remote = [item for item in remote_branches if item[\u0026quot;name\u0026quot;] == \u0026quot;origin/\u0026quot; + branch_name]\rif liste_remote:\rbranche_module[\u0026quot;remote_exists\u0026quot;] = True\rbranche_module[\u0026quot;remote_eq\u0026quot;] = liste_remote[0]['commit'] == short_commit\relse:\rbranche_module[\u0026quot;remote_exists\u0026quot;] = False\rfichierNonCommite = has_uncommitted_changes(repo_path)\r# Étape 4: Retourner un objet structuré avec les branches locales et distantes\rreturn local_branches, remote_branches, fichierNonCommite, localBranche\rdef find_repos_and_parse_files(parametre: Parametres): \u0026quot;\u0026quot;\u0026quot;Cherche dans les sous-répertoires pour identifier les repos git ou ceux contenant pom.xml ou package.json.\u0026quot;\u0026quot;\u0026quot;\n# start_dir_list, debug, ignoreProjet\rlisteGlobal = []\r# nomFichierGlobal=f\u0026quot;{start_dir}/.git\u0026quot;\rtoday = datetime.today()\rfilename = today.strftime(\u0026quot;projet_%y%m%d_%H%M%S.json\u0026quot;)\rfor start_dir in parametre.repertoires:\rfor root, dirs, files in os.walk(start_dir):\rif is_git_repo(root) or \u0026quot;pom.xml\u0026quot; in files or \u0026quot;package.json\u0026quot; in files:\r# print(f\u0026quot;\\nDépôt Git trouvé dans : {root}\u0026quot;)\rpathFile = os.path.basename(root)\rdirs[:] = []\rif parametre.repertoires_ignore is not None and pathFile in parametre.repertoires_ignore:\rprint(f\u0026quot;projet ignore {pathFile} : {root}\u0026quot;)\rcontinue\rprint(f\u0026quot;projet {pathFile} : {root}\u0026quot;)\rprojet = {\r'nom': pathFile,\r'rep': root,\r'modules': []\r}\rlisteGlobal.append(projet)\rroot0 = root\rfor root2, dirs2, files2 in os.walk(root0):\rdepotGit = is_git_repo(root2)\rdirs2[:] = [d for d in dirs2 if d not in {'node', 'node_modules', 'target', '.venv', '.git'}]\rif \u0026quot;pom.xml\u0026quot; in files2 or \u0026quot;package.json\u0026quot; in files2:\r# print(f\u0026quot;\\nProjet : {root}\u0026quot;)\rliste = []\rname = '.'\rif root2 != root0:\rname = os.path.basename(root2)\rmodule = {\r'name': name,\r'path': root2\r}\rprojet['modules'].append(module)\rif \u0026quot;pom.xml\u0026quot; in files2:\rpom_path = os.path.join(root2, \u0026quot;pom.xml\u0026quot;)\rparent_info, properties, version_projet, dependances, effectivePom = parse_pom_xml(pom_path,\rparametre.debug)\rpom = {\r}\rif parent_info is not None:\rpom['parent_info'] = parent_info\rif version_projet is not None:\rpom['version'] = version_projet\rif properties is not None:\rpom['properties'] = properties\rif dependances is not None:\rpom['dependances'] = dependances\rif effectivePom is not None:\rpom['effectivePom'] = effectivePom\rmodule['pom'] = pom\rif \u0026quot;package.json\u0026quot; in files2:\rpackage_path = os.path.join(root2, \u0026quot;package.json\u0026quot;)\rmap = parse_package_json(package_path)\rif map is not None:\rmodule['packageJson'] = map\rif depotGit:\rlocal_branches, remote_branches, fichierNonCommite, localBranche = fetch_and_list_branches(\rroot2)\rgitModule = {\r'localBranches': local_branches,\r'remoteBranches': remote_branches,\r'fichierNonCommite': fichierNonCommite,\r'localBranche': localBranche\r}\rmodule['git'] = gitModule\rwith open(f\u0026quot;data/{filename}\u0026quot;, \u0026quot;w\u0026quot;) as outfile:\rjson.dump(listeGlobal, outfile)\rprint(\u0026quot;date de debut : \u0026quot; + datetime.now().strftime(\u0026quot;%Y-%m-%d %H:%M:%S\u0026quot;)) start = datetime.now()\nparam = sys.argv\nparametres = Parametres()\ndebut_parametre = '--parametre=' debut_ignore = '--ignore=' debut_debug = '--debug'\nfor p in param[1:]: if p.startswith(debut_parametre): s = p[len(debut_parametre):] parametres.repertoires = s.split(',') elif p.startswith(debut_ignore): s = p[len(debut_ignore):] parametres.repertoires_ignore = s.split(',') elif p == debut_debug: parametres.debug = True else: raise Exception(\u0026quot;Parametre invalide : \u0026quot; + p)\nif not parametres.repertoires: raise Exception(\u0026quot;Liste des répertoires absente\u0026quot;)\nfind_repos_and_parse_files(parametres)\nprint(\u0026quot;date de fin : \u0026quot; + datetime.now().strftime(\u0026quot;%Y-%m-%d %H:%M:%S\u0026quot;)) delta = datetime.now() - start ms = delta.total_seconds() * 1000 milli = int(ms % 1000) seconds = (ms / 1000) % 60 seconds = int(seconds) minutes = (ms / (1000 * 60)) % 60 minutes = int(minutes) hours = int(ms / (1000 * 60 * 60)) % 24 print(f\u0026quot;duree d'execution : {hours:02d}:{minutes:02d}:{seconds:02d}.{milli:03d} ({ms} ms)\u0026quot;)\n","link":"https://abarhub.github.io/blogprog/post/analyse_projet.py/","section":"post","tags":["python"],"title":"Analyse une liste de projets"},{"body":"Liste d'outils Web :\nhttps://it-tools.tech/ : outils généraliste, très complet https://devtools.best/ : outils généraliste https://calculis.net/calcul-heure : pour les calculs de dates ","link":"https://abarhub.github.io/blogprog/post/tools_web/","section":"post","tags":["web"],"title":"Liste d'outils web"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/web/","section":"tags","tags":null,"title":"Web"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/powershell/","section":"tags","tags":null,"title":"Powershell"},{"body":" 1$url = \u0026#34;https://jsonplaceholder.typicode.com/posts\u0026#34; 2 3$n=0 4$val=0 5 6$res = @() 7 8 9while($val -ne 100) 10{ 11 $val++ 12 Write-Host $val 13 14 $url2=$url+\u0026#34;?_start=\u0026#34;+$n+\u0026#34;\u0026amp;_limit=5\u0026#34; 15 Write-Host $url2 16 17 $result = Invoke-RestMethod -uri \u0026#34;$url2\u0026#34; -UseDefaultCredentials -Method Get -ContentType \u0026#34;application/json\u0026#34; 18 19 if($result.Count -eq 0) { 20 break 21 } 22 23 $res += $result 24 25 Write-Host \u0026#34;count\u0026#34;, $res.Count 26 27 $n=$n+5 28} 29 30Write-Host \u0026#34;res\u0026#34; 31 32$res ","link":"https://abarhub.github.io/blogprog/post/liste_powershell/","section":"post","tags":["cli","shell","windows","powershell"],"title":"Récupération d'une liste avec des appels rest"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/java/","section":"tags","tags":null,"title":"Java"},{"body":"Liste de librairie Java Guava Apache Common Lang Apache Common IO Apache Common Compress Apache Common CSV Resilience4j Bucket4j JUnit5 AssertJ OpenFeign Liste de framework Spring boot Vertx Micronaute Quarkus Jakarta JEE ","link":"https://abarhub.github.io/blogprog/post/liste_librairie_java/","section":"post","tags":["java"],"title":"Liste des librairies en Java"},{"body":"Liste d'outils de proxy Http Mockoon mitmproxy OWASP Zed Attack Proxy (ZAP) ","link":"https://abarhub.github.io/blogprog/post/outils_proxy_http/","section":"post","tags":["web"],"title":"Liste d'outils de proxy pour le navigateur"},{"body":"Outils de formatage de code Spotless outils de formatage de code : fonctionne avec Maven, gradle, prettier, mais le plugin IntelliJ ne fonctionne qu'avec Gradle Biome outils de formatage pur le front (Javascript, Json, etc...) Prettier outils de formatage qui fonctionne avec beaucoup de langage (Javascript, Java, etc...), mais necessite nodeJs. Fonctionne bien avec IntelliJ google-java-format outils de formatage de Java. Il a un plugin IntelliJ Palantir-Java-Formater : pour formater le Java. A un plugin IntelliJ. Basé sur le code de Google-Java-Formater eslint outils pour vérifier le code Javascript et TypeScript. Il peut le reformater. Fmt-Maven-Plugin plugin maven pour reformater le code Java avec le stye de google ","link":"https://abarhub.github.io/blogprog/post/outils_formatage_code/","section":"post","tags":["java","cli","shell"],"title":"Outils de formatage de code (Java, Javascript, Yaml, ect...)"},{"body":"Configuration logback Exemple simple Utilisation en Java avec SLF4J\n1public class Slf4jExample { 2 3 private static final Logger LOGGER = LoggerFactory.getLogger(Slf4jExample.class); 4 5 public static void main(String[] args) { 6 LOGGER.debug(\u0026#34;Debug log message\u0026#34;); 7 LOGGER.info(\u0026#34;Info log message\u0026#34;); 8 LOGGER.error(\u0026#34;Error log message\u0026#34;); 9 } 10} Configuration simple sur la console\n1\u0026lt;configuration\u0026gt; 2 3 \u0026lt;appender name=\u0026#34;CONSOLE\u0026#34; class=\u0026#34;ch.qos.logback.core.ConsoleAppender\u0026#34;\u0026gt; 4 \u0026lt;layout class=\u0026#34;ch.qos.logback.classic.PatternLayout\u0026#34;\u0026gt; 5 \u0026lt;Pattern\u0026gt; 6 %d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n 7 \u0026lt;/Pattern\u0026gt; 8 \u0026lt;/layout\u0026gt; 9 \u0026lt;/appender\u0026gt; 10 11 \u0026lt;logger name=\u0026#34;com.mkyong\u0026#34; level=\u0026#34;debug\u0026#34; additivity=\u0026#34;false\u0026#34;\u0026gt; 12 \u0026lt;appender-ref ref=\u0026#34;CONSOLE\u0026#34;/\u0026gt; 13 \u0026lt;/logger\u0026gt; 14 15 \u0026lt;root level=\u0026#34;error\u0026#34;\u0026gt; 16 \u0026lt;appender-ref ref=\u0026#34;CONSOLE\u0026#34;/\u0026gt; 17 \u0026lt;/root\u0026gt; 18 19\u0026lt;/configuration\u0026gt; Configuration en reprenant le pattern de spring boot 1\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; 2\u0026lt;configuration scan=\u0026#34;true\u0026#34;\u0026gt; 3 \u0026lt;!-- use Spring default values --\u0026gt; 4 \u0026lt;include resource=\u0026#34;org/springframework/boot/logging/logback/defaults.xml\u0026#34;/\u0026gt; 5 6 \u0026lt;appender name=\u0026#34;CONSOLE\u0026#34; class=\u0026#34;ch.qos.logback.core.ConsoleAppender\u0026#34;\u0026gt; 7 \u0026lt;encoder\u0026gt; 8 \u0026lt;pattern\u0026gt;${CONSOLE_LOG_PATTERN}\u0026lt;/pattern\u0026gt; 9 \u0026lt;charset\u0026gt;utf8\u0026lt;/charset\u0026gt; 10 \u0026lt;/encoder\u0026gt; 11 \u0026lt;/appender\u0026gt; 12 … 13\u0026lt;/configuration\u0026gt; Séparation de certains log dans un fichier séparé Pour mettre les logs dans un fichier séparé :\n1\u0026lt;?xml version=\u0026#34;1.0\u0026#34;?\u0026gt; 2\u0026lt;configuration\u0026gt; 3 \u0026lt;appender name=\u0026#34;FILE\u0026#34; class=\u0026#34;ch.qos.logback.core.FileAppender\u0026#34;\u0026gt; 4 \u0026lt;file\u0026gt;logfile.log\u0026lt;/file\u0026gt; 5 \u0026lt;append\u0026gt;true\u0026lt;/append\u0026gt; 6 \u0026lt;encoder\u0026gt; 7 \u0026lt;pattern\u0026gt;%-4relative [%thread] %-5level %logger{35} - %msg %n\u0026lt;/pattern\u0026gt; 8 \u0026lt;/encoder\u0026gt; 9 \u0026lt;/appender\u0026gt; 10 \u0026lt;appender name=\u0026#34;ANALYTICS-FILE\u0026#34; class=\u0026#34;ch.qos.logback.core.FileAppender\u0026#34;\u0026gt; 11 \u0026lt;file\u0026gt;analytics.log\u0026lt;/file\u0026gt; 12 \u0026lt;append\u0026gt;true\u0026lt;/append\u0026gt; 13 \u0026lt;encoder\u0026gt; 14 \u0026lt;pattern\u0026gt;%-4relative [%thread] %-5level %logger{35} - %msg %n\u0026lt;/pattern\u0026gt; 15 \u0026lt;/encoder\u0026gt; 16 \u0026lt;/appender\u0026gt; 17 \u0026lt;!-- additivity=false ensures analytics data only goes to the analytics log --\u0026gt; 18 \u0026lt;logger name=\u0026#34;analytics\u0026#34; level=\u0026#34;DEBUG\u0026#34; additivity=\u0026#34;false\u0026#34;\u0026gt; 19 \u0026lt;appender-ref ref=\u0026#34;ANALYTICS-FILE\u0026#34;/\u0026gt; 20 \u0026lt;/logger\u0026gt; 21 \u0026lt;root\u0026gt; 22 \u0026lt;appender-ref ref=\u0026#34;FILE\u0026#34;/\u0026gt; 23 \u0026lt;/root\u0026gt; 24\u0026lt;/configuration\u0026gt; Pour l'utiliser\n1Logger analytics = LoggerFactory.getLogger(\u0026#34;analytics\u0026#34;); Pour indiquer ou se trouve le fichier de log 1-Dlogging.config=file:///your/file/location/logback.xml Configuration d'un appender dans un fichier avec rollback 1\u0026lt;configuration\u0026gt; 2 \u0026lt;appender name=\u0026#34;FILE\u0026#34; class=\u0026#34;ch.qos.logback.core.rolling.RollingFileAppender\u0026#34;\u0026gt; 3 \u0026lt;file\u0026gt;logFile.log\u0026lt;/file\u0026gt; 4 \u0026lt;rollingPolicy class=\u0026#34;ch.qos.logback.core.rolling.TimeBasedRollingPolicy\u0026#34;\u0026gt; 5 \u0026lt;!-- daily rollover --\u0026gt; 6 \u0026lt;fileNamePattern\u0026gt;logFile.%d{yyyy-MM-dd}.log\u0026lt;/fileNamePattern\u0026gt; 7 8 \u0026lt;!-- keep 30 days\u0026#39; worth of history capped at 3GB total size --\u0026gt; 9 \u0026lt;maxHistory\u0026gt;30\u0026lt;/maxHistory\u0026gt; 10 \u0026lt;totalSizeCap\u0026gt;3GB\u0026lt;/totalSizeCap\u0026gt; 11 12 \u0026lt;/rollingPolicy\u0026gt; 13 14 \u0026lt;encoder\u0026gt; 15 \u0026lt;pattern\u0026gt;%-4relative [%thread] %-5level %logger{35} -%kvp- %msg%n\u0026lt;/pattern\u0026gt; 16 \u0026lt;/encoder\u0026gt; 17 \u0026lt;/appender\u0026gt; 18 19 \u0026lt;root level=\u0026#34;DEBUG\u0026#34;\u0026gt; 20 \u0026lt;appender-ref ref=\u0026#34;FILE\u0026#34; /\u0026gt; 21 \u0026lt;/root\u0026gt; 22\u0026lt;/configuration\u0026gt; syntaxe des pattern La documentation est ici\n%X{ABC} : pour afficher un MDC. Si le {} n'est pas présent, c'est pour le MDC qui est affiché ${PID} : le pid du processus. C'est spécifique à Spring Boot ","link":"https://abarhub.github.io/blogprog/post/configuration_logback/","section":"post","tags":["log","java"],"title":"Configuration logback"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/log/","section":"tags","tags":null,"title":"Log"},{"body":"Recherche windows DOS (cmd) Pour recherche les fichiers contenants une chaine de caractère, la commande est :\n1findstr \u0026#34;machaine\u0026#34; *.* L'option /I permet de faaire une recherche insensible à la casse.\nPowershell Pour rechercher les fichiers contenant une chaine de caractère :\n1Get-ChildItem C:\\temp -Filter *.log -Recurse | Select-String \u0026#34;machaine\u0026#34; Cela fait une recherche récursive. Si ce n'est pas récursif, la commande est :\n1Select-String -Path C:\\temp\\*.log -Pattern \u0026#34;machaine\u0026#34; Pour rechercher les fichiers qui ont une extention de façon récursive :\n1Get-ChildItem -Path \u0026#34;C:\\code\\\u0026#34; -Filter *.js -r -File Outils RipGrep RipGrep permet de faire les recherches. L'outils est ici.\n1rg \u0026#34;machaine\u0026#34; -g \u0026#39;*.java\u0026#39; \u0026#34;C:\\code\\\u0026#34; Pour rechercher par nom de fichier :\n1rg --files | rg -i \u0026#34;.java$\u0026#34; FD La recherche avec FD peut être fait sur le nom du fichier. L'outils est ici.\nExemple :\n1fd \u0026#34;\\.java$\u0026#34; C:\\code\\ La recherche est une expression régulière.\n","link":"https://abarhub.github.io/blogprog/post/find_windows/","section":"post","tags":["cli","shell","windows"],"title":"Recherche d'une chaine de caractère sous windows en bat et en Powershell ou avec des outils"},{"body":"Exemple de configuration pour lancer un service sous Linux 1[Unit] 2Description=Mon service server daemon 3After=network.target 4 5[Service] 6#Type=simple 7#Type=exec 8Type=forking 9EnvironmentFile=/etc/sysconfig/monservice 10ExecStart=/usr/sbin/monservice 11#Restart= always 12User=monuser 13KillMode=process 14Environment=MON_SERVICE_HOME=/usr/share/monservice 15Environment=MON_SERVICE_CONF=/etc/monservice/conf 16Environment=LOCAL_JMX=false 17 18[Install] 19WantedBy=multi-user.target Ensuite pour l'installer :\n1# installer 2sudo cp curator/mon-service.service /etc/systemd/system/mon-service.service 3sudo systemctl enable mon-service.service 4sudo systemctl start mon-service.service 5# voir l\u0026#39;état 6sudo systemctl status mon-service.service 7# voir les logs 8journalctl -u mon-service.service Pour la commande pour lancer le processus\n1#!/bin/bash 2 3nohup java -jar /home/monservice/mon-service-webapp-1.0.0-SNAPSHOT.jar --spring.config.location=/home/monservice/config/application.yml \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 \u0026amp; ","link":"https://abarhub.github.io/blogprog/post/install_service_linux/","section":"post","tags":["linux","shell"],"title":"Installation d'un service sous Linux"},{"body":"Génération du code xml à partir d'un XSD Pour générer du XML à partir du XSD, il faut utiliser la librairie Apache XML Bean. Voici le code :\n1import org.apache.xmlbeans.SchemaType; 2import org.apache.xmlbeans.SchemaTypeSystem; 3import org.apache.xmlbeans.XmlBeans; 4import org.apache.xmlbeans.XmlException; 5import org.apache.xmlbeans.XmlObject; 6import org.apache.xmlbeans.XmlOptions; 7import org.apache.xmlbeans.impl.xsd2inst.SampleXmlUtil; 8import org.apache.xmlbeans.impl.xsd2inst.SchemaInstanceGenerator; 9 10import java.util.ArrayList; 11import java.util.List; 12 13public class XmlInstanceGeneratorImpl { 14 private static final Logger logger = LogManager.getLogger(XmlInstanceGeneratorImpl.class); 15 16 /** 17 * Specifies if network downloads are enabled for imports and includes. 18 * Default value is {@code false} 19 */ 20 private static final boolean ENABLE_NETWORK_DOWNLOADS = false; 21 22 /** 23 * disable particle valid (restriction) rule 24 * Default value is {@code false} 25 */ 26 private static final boolean NO_PVR = false; 27 28 /** 29 * disable unique particle attribution rule. 30 * Default value is {@code false} 31 */ 32 private static final boolean NO_UPA = false; 33 34 35 public String generateXmlInstance(String xsdAsString, String elementToGenerate){ 36 return generateXmlInstance(xsdAsString, elementToGenerate, ENABLE_NETWORK_DOWNLOADS, NO_PVR, NO_UPA); 37 } 38 39 40 public String generateXmlInstance(String xsAsString, String elementToGenerate, boolean enableDownloads, 41 boolean noPvr, boolean noUpa){ 42 List\u0026lt;XmlObject\u0026gt; schemaXmlObjects = new ArrayList\u0026lt;\u0026gt;(); 43 try { 44 schemaXmlObjects.add(XmlObject.Factory.parse(xsAsString)); 45 } catch (XmlException e) { 46 logger.error(\u0026#34;Error Occured while Parsing Schema\u0026#34;,e); 47 } 48 XmlObject[] xmlObjects = schemaXmlObjects.toArray(new XmlObject[1]); 49 SchemaInstanceGenerator.Xsd2InstOptions options = new SchemaInstanceGenerator.Xsd2InstOptions(); 50 options.setNetworkDownloads(enableDownloads); 51 options.setNopvr(noPvr); 52 options.setNoupa(noUpa); 53 return xsd2inst(xmlObjects, elementToGenerate, options); 54 } 55 56 private String xsd2inst(XmlObject[] schemas, String rootName, SchemaInstanceGenerator.Xsd2InstOptions options){ 57 SchemaTypeSystem schemaTypeSystem = null; 58 if (schemas.length \u0026gt; 0) { 59 XmlOptions compileOptions = new XmlOptions(); 60 if (options.isNetworkDownloads()) 61 compileOptions.setCompileDownloadUrls(); 62 if (options.isNopvr()) 63 compileOptions.setCompileNoPvrRule(); 64 if (options.isNoupa()) 65 compileOptions.setCompileNoUpaRule(); 66 try { 67 schemaTypeSystem = XmlBeans.compileXsd(schemas, XmlBeans.getBuiltinTypeSystem(), compileOptions); 68 } catch (XmlException e) { 69 logger.error(\u0026#34;Error occurred while compiling XSD\u0026#34;,e); 70 } 71 } 72 if (schemaTypeSystem == null) { 73 throw new RuntimeException(\u0026#34;No Schemas to process.\u0026#34;); 74 } 75 76 SchemaType[] globalElements = schemaTypeSystem.documentTypes(); 77 SchemaType elem = null; 78 for (SchemaType globalElement : globalElements) { 79 if (rootName.equals(globalElement.getDocumentElementName().getLocalPart())) { 80 elem = globalElement; 81 break; 82 } 83 } 84 if (elem == null) { 85 throw new RuntimeException(\u0026#34;Could not find a global element with name \\\u0026#34;\u0026#34; + rootName + \u0026#34;\\\u0026#34;\u0026#34;); 86 } 87 // Now generate it and return the result 88 return SampleXmlUtil.createSampleForType(elem); 89 } 90} Code trouvé ici\nPour le faire avec maven :\n1\u0026lt;project\u0026gt; 2 \u0026lt;!-- ... --\u0026gt; 3 \u0026lt;build\u0026gt; 4 \u0026lt;plugins\u0026gt; 5 \u0026lt;plugin\u0026gt; 6 \u0026lt;groupId\u0026gt;org.codehaus.mojo\u0026lt;/groupId\u0026gt; 7 \u0026lt;artifactId\u0026gt;exec-maven-plugin\u0026lt;/artifactId\u0026gt; 8 \u0026lt;version\u0026gt;3.0.0\u0026lt;/version\u0026gt; 9 \u0026lt;executions\u0026gt; 10 \u0026lt;execution\u0026gt; 11 \u0026lt;goals\u0026gt; 12 \u0026lt;goal\u0026gt;java\u0026lt;/goal\u0026gt; 13 \u0026lt;/goals\u0026gt; 14 \u0026lt;/execution\u0026gt; 15 \u0026lt;/executions\u0026gt; 16 \u0026lt;configuration\u0026gt; 17 \u0026lt;includeProjectDependencies\u0026gt;false\u0026lt;/includeProjectDependencies\u0026gt; 18 \u0026lt;includePluginDependencies\u0026gt;true\u0026lt;/includePluginDependencies\u0026gt; 19 \u0026lt;mainClass\u0026gt;org.apache.xmlbeans.impl.inst2xsd.Inst2Xsd\u0026lt;/mainClass\u0026gt; 20 \u0026lt;arguments\u0026gt; 21 \u0026lt;!-- Add as many arguments as you need --\u0026gt; 22 \u0026lt;argument\u0026gt;-outDir\u0026lt;/argument\u0026gt; 23 \u0026lt;argument\u0026gt;${project.build.outputDirectory}\u0026lt;/argument\u0026gt; 24 \u0026lt;argument\u0026gt;-validate\u0026lt;/argument\u0026gt; 25 \u0026lt;argument\u0026gt;${project.basedir}/src/main/resources/food-menu.xml\u0026lt;/argument\u0026gt; 26 \u0026lt;/arguments\u0026gt; 27 \u0026lt;/configuration\u0026gt; 28 \u0026lt;dependencies\u0026gt; 29 \u0026lt;dependency\u0026gt; 30 \u0026lt;groupId\u0026gt;org.apache.xmlbeans\u0026lt;/groupId\u0026gt; 31 \u0026lt;artifactId\u0026gt;xmlbeans\u0026lt;/artifactId\u0026gt; 32 \u0026lt;version\u0026gt;3.1.0\u0026lt;/version\u0026gt; 33 \u0026lt;/dependency\u0026gt; 34 \u0026lt;/dependencies\u0026gt; 35 \u0026lt;/plugin\u0026gt; 36 \u0026lt;/plugins\u0026gt; 37 \u0026lt;/build\u0026gt; 38 \u0026lt;!-- ... --\u0026gt; 39\u0026lt;/project\u0026gt; Code trouvé ici\n","link":"https://abarhub.github.io/blogprog/post/generation_xml_a_partir_xsd/","section":"post","tags":["java","xml","xsd"],"title":"Génération du xml à partir du XSD"},{"body":"Heritage de type en XSD En XSD, il est possible d'utiliser l'heritage de type.\nPar exemple :\n1\u0026lt;xs:complexType name=\u0026#34;AddressType\u0026#34;\u0026gt; 2 \u0026lt;xs:sequence\u0026gt; 3 \u0026lt;xs:element name=\u0026#34;Line1\u0026#34; type=\u0026#34;xs:string\u0026#34; /\u0026gt; 4 \u0026lt;xs:element name=\u0026#34;Line2\u0026#34; type=\u0026#34;xs:string\u0026#34; /\u0026gt; 5 \u0026lt;/xs:sequence\u0026gt; 6\u0026lt;/xs:complexType\u0026gt; 7\u0026lt;xs:complexType name=\u0026#34;UKAddressType\u0026#34;\u0026gt; 8 \u0026lt;xs:complexContent\u0026gt; 9 \u0026lt;xs:extension base=\u0026#34;AddressType\u0026#34;\u0026gt; 10 \u0026lt;xs:sequence\u0026gt; 11 \u0026lt;xs:element name=\u0026#34;County\u0026#34; type=\u0026#34;xs:string\u0026#34; /\u0026gt; 12 \u0026lt;xs:element name=\u0026#34;Postcode\u0026#34; type=\u0026#34;xs:string\u0026#34; /\u0026gt; 13 \u0026lt;/xs:sequence\u0026gt; 14 \u0026lt;/xs:extension\u0026gt; 15 \u0026lt;/xs:complexContent\u0026gt; 16\u0026lt;/xs:complexType\u0026gt; 17\u0026lt;xs:complexType name=\u0026#34;USAddressType\u0026#34;\u0026gt; 18 \u0026lt;xs:complexContent\u0026gt; 19 \u0026lt;xs:extension base=\u0026#34;AddressType\u0026#34;\u0026gt; 20 \u0026lt;xs:sequence\u0026gt; 21 \u0026lt;xs:element name=\u0026#34;State\u0026#34; type=\u0026#34;xs:string\u0026#34; /\u0026gt; 22 \u0026lt;xs:element name=\u0026#34;Zipcode\u0026#34; type=\u0026#34;xs:string\u0026#34; /\u0026gt; 23 \u0026lt;/xs:sequence\u0026gt; 24 \u0026lt;/xs:extension\u0026gt; 25 \u0026lt;/xs:complexContent\u0026gt; 26\u0026lt;/xs:complexType\u0026gt; Le type UKAddressType contient les champs Line1, Line2, Country et Postcode, alors que le type USAddressType contient les champs Line1, Line2, Stat et Zipcode.\nLe type AddressType peut tre abstract avec l'attribut abstract=\u0026quot;true\u0026quot;\nUtilisation dans du XSD Pour utiliser dans du xsd l'un ou l'autre, il faut indiquer le type :\n1\u0026lt;xs:element name=\u0026#34;UKAddress\u0026#34; type=\u0026#34;UKAddressType\u0026#34; /\u0026gt; 2\u0026lt;xs:element name=\u0026#34;USAddress\u0026#34; type=\u0026#34;USAddressType\u0026#34; /\u0026gt; Utilisation dans du XML Pour l'utiliser dans du xml, il faut ajouter l'attribut xsi:type.\nPar exemple pour le type suivant\n1\u0026lt;xs:element name=\u0026#34;Person\u0026#34;\u0026gt; 2 \u0026lt;xs:complexType\u0026gt; 3 \u0026lt;xs:sequence\u0026gt; 4 \u0026lt;xs:element name=\u0026#34;Name\u0026#34; type=\u0026#34;xs:string\u0026#34; /\u0026gt; 5 \u0026lt;xs:element name=\u0026#34;HomeAddress\u0026#34; type=\u0026#34;AddressType\u0026#34; /\u0026gt; 6 \u0026lt;/xs:sequence\u0026gt; 7 \u0026lt;/xs:complexType\u0026gt; 8\u0026lt;/xs:element\u0026gt; Il peut tre utilis comme a :\n1\u0026lt;?xml version=\u0026#34;1.0\u0026#34; ?\u0026gt; 2\u0026lt;Person\u0026gt; 3 \u0026lt;Name\u0026gt;Fred\u0026lt;/Name\u0026gt; 4 \u0026lt;HomeAddress\u0026gt; 5 \u0026lt;Line1\u0026gt;22 whatever place, someplace\u0026lt;/Line1\u0026gt; 6 \u0026lt;Line2\u0026gt;sometown, ss1 6gy \u0026lt;/Line2\u0026gt; 7 \u0026lt;/HomeAddress\u0026gt; 8\u0026lt;/Person\u0026gt; ou comme a :\n1\u0026lt;?xml version=\u0026#34;1.0\u0026#34; ?\u0026gt; 2\u0026lt;Person xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34;\u0026gt; 3 \u0026lt;Name\u0026gt;Fred\u0026lt;/Name\u0026gt; 4 \u0026lt;HomeAddress xsi:type=\u0026#34;USAddressType\u0026#34;\u0026gt; 5 \u0026lt;Line1\u0026gt;234 Lancaseter Av\u0026lt;/Line1\u0026gt; 6 \u0026lt;Line2\u0026gt;SmallsVille\u0026lt;/Line2\u0026gt; 7 \u0026lt;State\u0026gt;Florida\u0026lt;/State\u0026gt; 8 \u0026lt;Zipcode\u0026gt;34543\u0026lt;/Zipcode\u0026gt; 9 \u0026lt;/HomeAddress\u0026gt; 10\u0026lt;/Person\u0026gt; Information trouv ici\n","link":"https://abarhub.github.io/blogprog/post/heritage_type_xsd/","section":"post","tags":["xml","xsd"],"title":"Heritage de type en xsd"},{"body":"Liste des transactions ouvertes en Oracle Pour lister les sessions Oracle, il faut executer la requete suivante :\n1select s.inst_id, s.sid, s.serial#, s.username, 2 s.program, s.osuser, s.status session_status, 3 s.sql_id, t.status tran_status, 4 t.start_time tran_start, t.used_ublk used_undo_blocks, 5 t.used_urec used_undo_recs 6 from gv$session s, gv$transaction t 7 where t.addr = s.taddr; ","link":"https://abarhub.github.io/blogprog/post/liste_transactions_ouvertes_oracle/","section":"post","tags":["sql","oracle"],"title":"Lister les transactions ouvertes en Oracle"},{"body":"Table locké Pour vérifier si une table est locké en Oracle, il faut executer la requete sql avec un compte system :\n1-- Query to Get List of all locked objects 2SELECT B.Owner, B.Object_Name, A.Oracle_Username, A.OS_User_Name 3FROM V$Locked_Object A, All_Objects B 4WHERE A.Object_ID = B.Object_ID ; Ensuite il faut récupérer les identifants avec la requete suivante, en remplacant NOM_DU_SCHEMA par le nom du schéma concerné :\n1-- Query to Get List of locked sessions 2select SID,SERIAL#,INST_ID from gv$session a where schemaname = \u0026#39;NOM_DU_SCHEMA\u0026#39;; Enfin, il faut arreter le lock, en utilisant le résultat de la requete précédente :\n1-- Statement to Kill the session [pass values in the same order and append @ for inst_id] 2alter system kill session \u0026#39;314,26513,@1\u0026#39;; Code trouvé ici\n","link":"https://abarhub.github.io/blogprog/post/table_locke/","section":"post","tags":["sql","oracle"],"title":"Suppression du lock sur une table Oracle"},{"body":"Supprimer balise XML avec une Regex Pour supprimer une balise et son contenu dans un document xml en utilisant une regex :\n1xmlRequest=xmlRequest.replaceAll(\u0026#34;\u0026lt;Address\u0026gt;[\\\\s\\\\S]*?\u0026lt;/Address\u0026gt;\u0026#34;,\u0026#34;\u0026#34;); C'est en Java, mais cela fonctionne dans d'autres langages. Si la balise est présente plusieurs fois, ça les suppriment tous. Code trouvé ici\n","link":"https://abarhub.github.io/blogprog/post/supprimerbalidexml/","section":"post","tags":["java","xml"],"title":"Supprimer une balise xml et son contenu grace a une regex en Java"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/xml/","section":"tags","tags":null,"title":"Xml"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/xsd/","section":"tags","tags":null,"title":"Xsd"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/bat/","section":"tags","tags":null,"title":"Bat"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/dos/","section":"tags","tags":null,"title":"Dos"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/robocopy/","section":"tags","tags":null,"title":"Robocopy"},{"body":"Suppression des répertoires La suppression d'une grande arborescence de répetroire est très lente avec l'explorateur. Pour supprimer des répertoires, de façon plus rapide, il y a la commande robocopy. Pour supprimer le répertoire c:\\test, il faut créer un répertoire vide c:\\empty, puis lancer :\n1robocopy c:\\empty c:\\test /purge ou\n1robocopy c:\\empty c:\\test /MIR La différence est que si le répertoire c:\\test existe, les ACL ne seront pas modifiés avec la commande /MIR\n","link":"https://abarhub.github.io/blogprog/post/suppression_repertoire_robocopy/","section":"post","tags":["bat","dos","robocopy"],"title":"suppression d'une grand arborescence sous windows rapidement (robocopy)"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/angular/","section":"tags","tags":null,"title":"Angular"},{"body":"Formation Angular Ne jamais faire de subscrib dans un subscrib Il ne faut jamais faire de :\n1this._bookRepository.getBookList() 2this._bookRepository.getBookList() 3.subscribe(bookList =\u0026gt; { 4this.bookList = bookList 5let autre=this.other.get().subscribe(bookList =\u0026gt; { 6 // autre traitement 7}); 8}) Si on fait comme ça, on n'est pas sur de l'ordre des appels. Exemple ici. Il faut utiliser un switchMap pour ne prendre que le dernier, et faire un seul appel. Il faut aussi penser à retourner quelque chose s'il y a une erreur pour éviter d'arreter le flux.\nLibération d'un observable Pour liberer un observable, il faut utiliser takeUntileDestroy().\n","link":"https://abarhub.github.io/blogprog/post/formation_angular/","section":"post","tags":["angular"],"title":"Formation Angular 17 (02/2024)"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/backup/","section":"tags","tags":null,"title":"Backup"},{"body":"Liste de logiciels de backup Nom OS VSS Cryptage Cloud Job Cronné Payant Cobian Backup Windows Oui(symetrique) Oui Non Oui Non Restic Windows/Linux Oui Oui(symetrique) Oui Oui(resticProfile) Non Duplicacy Windows/Linux Oui(Asymetrique) Oui Oui Oui ","link":"https://abarhub.github.io/blogprog/post/logiciel_backup/","section":"post","tags":["backup"],"title":"Liste de logiciels de backup"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/ia/","section":"tags","tags":null,"title":"Ia"},{"body":"les IA de chat ChatGPT : L'IA ChatGPT d'OpenIA en version 3.5 Bard : L'IA de Google Bing : L'IA Bing de Microsoft, basé sur ChatGPT 4 Mistral : model de donnée de Mistral IA LLama : model de donnée de LLama 2 de Facebook les IA qui génère des images Midjourney : outils pour générer une image Dall-E : outils de génération d'image de OpenIA Stable-Diffusion : Outils pour générer des images. En ligne. Il est possible de l'installer sur son poste Leonardo : génération d'image impressionante, mais payant les outils LLama Index : outils pour ingérer des données dans un LLM Git LangChain : permet de traiter la réponse d'un LLM pour faire des actions Git LM Studio : outils pour utiliser les LLM sur le bureau sans internet OpenCV : outils pour la reconnaissance à partir d'image les outils sur internet huggingface : Contient des modles d'IA Google Colab : Pour faire des tutoriaux d'IA Awesome Colab : Une grande liste de Notebook pour apprendre l'IA les tutoriels Les bases : https://www.youtube.com/watch?v=QWVZUEBU11s Utilisation de LM Studio : https://www.youtube.com/watch?v=jshgEkO6MhI ","link":"https://abarhub.github.io/blogprog/post/ia/","section":"post","tags":["ia"],"title":"Les outils pour l'ia"},{"body":"Pour executer un fichier jar dans le répertoire courant, en prenant le premier jar trouvé, il faut faire\n1SET mypath=%~dp0 2rem echo %mypath:~0,-1% 3SET REP=%mypath:~0,-1% 4set filename=monjar-1.0.jar 5FOR %%F IN (*.jar) DO ( 6 set filename=%%F 7 goto next 8) 9:next 10java -jar %REP%\\%filename% ","link":"https://abarhub.github.io/blogprog/post/execute_jar/","section":"post","tags":["dos","bat"],"title":"Execution du premier jar trouvé"},{"body":"Pour trier un objet sur 2 champs, il faut faire une fonction spéciale de trie :\n1interface Person { 2 name: string; 3 age: number; 4} 5 6const personnes: Person[] = [ 7 { name: \u0026#34;Alice\u0026#34;, age: 25 }, 8 { name: \u0026#34;Bob\u0026#34;, age: 30 }, 9 { name: \u0026#34;Charlie\u0026#34;, age: 20 }, 10 { name: \u0026#34;Alice\u0026#34;, age: 30 } 11]; 12 13personnes.sort((a, b) =\u0026gt; { 14 if (a.age !== b.age) { 15 return a.age - b.age; // Trie par âge en ordre croissant 16 } else { 17 return a.name.localeCompare(b.name); // Trie par nom en ordre alphabétique 18 } 19}); ","link":"https://abarhub.github.io/blogprog/post/trie_typescript_objet/","section":"post","tags":["typescript"],"title":"Trie en Typescript d'un objet sur 2 champs"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/typescript/","section":"tags","tags":null,"title":"Typescript"},{"body":"Toutes les commandes doivent être executé en administrateur.\nListe Pour lister les shadow copy : vssadmin list shadows\n1vssadmin 1.1 - Outil ligne de commande d’administration du service de cliché instantané de volume 2(C) Copyright 2001-2013 Microsoft Corp. 3 4Contenu du jeu de clichés instantanés n° : {s2acebd3-14e3-4786-a53e-5ae3c8c62eba} 5 Contenait 1 clichés instantanés à la date de création : 19/05/2023 18:58:50 6 ID du cliché instantané : {81c4df18-1af6-1b8c-b29d-04e981ed970c} 7 Volume original : (D:)\\\\?\\Volume{c6cccf4b-dd16-4240-8bbd-5fbf9c080b2e}\\ 8 Volume de cliché instantané : \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy41 9 Ordinateur d’origine : SERVER 10 Ordinateur de service : SERVER 11 Fournisseur : \u0026#39;Microsoft Software Shadow Copy provider 1.0\u0026#39; 12 Type : ClientAccessible 13 Attributs : Persistent, Accessible par client, Pas de libération automatique, Aucun rédacteur, Différentielle Creer powershell.exe -Command \u0026quot;(gwmi -list win32_shadowcopy).Create('E:\\','ClientAccessible')\u0026quot;\n1__GENUS : 2 2__CLASS : __PARAMETERS 3__SUPERCLASS : 4__DYNASTY : __PARAMETERS 5__RELPATH : 6__PROPERTY_COUNT : 2 7__DERIVATION : {} 8__SERVER : 9__NAMESPACE : 10__PATH : 11ReturnValue : 0 12ShadowID : {42A5CD56-3DCA-C57A-C38C-04E981ED970C} 13PSComputerName : Supprimer Pour supprimer, la commande est : vssadmin delete shadows /for=C:\n1vssadmin 1.1 - Outil ligne de commande d’administration du service de cliché instantané de volume 2(C) Copyright 2001-2013 Microsoft Corp. 3 4Voulez-vous vraiment supprimer 1 clichés instantanés (O/N) : [N] ? o 5 61 clichés instantanés ont été supprimés. Il est aussi possible de supprimer en indiquer l'ID du cliché : vssadmin delete shadows /Shadow=c6cccf4b-dd16-4240-8bbd-5fbf9c080b2e\nLien https://stackoverflow.com/a/14213304/6577778\nLien symbolique Pour manipuler les fichiers, il faut utiliser un lien symbolique :\n1mklink /d C:\\shadowcopy \u0026#34;\\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy41\\\u0026#34; Il faut mettre un \\ à la fin, sinon c'est un lien vers un fichier.\nPopur supprimer le lien, il faut executer :\n1rmdir C:\\shadowcopy ","link":"https://abarhub.github.io/blogprog/post/shadow_copy/","section":"post","tags":["VSS","Volume Shadow Copy Service","windows","cli","shell"],"title":"gestion des shadow copy (vss) sous windows"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/volume-shadow-copy-service/","section":"tags","tags":null,"title":"Volume Shadow Copy Service"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/vss/","section":"tags","tags":null,"title":"VSS"},{"body":" 1package main 2 3import( 4 \u0026#34;bufio\u0026#34; 5 \u0026#34;fmt\u0026#34; 6 \u0026#34;log\u0026#34; 7 \u0026#34;os\u0026#34; 8 \u0026#34;regexp\u0026#34; 9) 10 11func handleLine(line string) { 12 matched, err := regexp.MatchString(os.Args[1], line) 13 14 if err != nil { 15 log.Fatal(err) 16 } else if matched { 17 fmt.Println(line) 18 } 19} 20 21func main() { 22 scanner := bufio.NewScanner(os.Stdin) 23 24 for scanner.Scan() { 25 handleLine(scanner.Text()) 26 } 27 28 if err := scanner.Err(); err != nil { 29 log.Fatal(err) 30 } 31} ","link":"https://abarhub.github.io/blogprog/post/grep.go/","section":"post","tags":["golang","grep"],"title":"A simple grep implementation in Go"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/golang/","section":"tags","tags":null,"title":"Golang"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/grep/","section":"tags","tags":null,"title":"Grep"},{"body":"A curated list of command-line utilities written in Rust Note: I have moved this list to a proper repository. I'll leave this gist up, but it won't be updated. To submit an idea, open a PR on the repo.\nNote that I have not tried all of these personally, and cannot and do not vouch for all of the tools listed here. In most cases, the descriptions here are copied directly from their code repos. Some may have been abandoned. Investigate before installing/using.\nThe ones I use regularly include: bat, dust, fd, fend, hyperfine, miniserve, ripgrep, just, cargo-audit and cargo-wipe.\natuin: \u0026quot;Magical shell history\u0026quot; bandwhich: Terminal bandwidth utilization tool bat: A replacement for cat that provides syntax highlighting and other features. bottom: Yet another cross-platform graphical process/system monitor. broot: A new way to see and navigate directory trees counts: \u0026quot;A tool for ad hoc profiling\u0026quot; choose: A human-friendly and fast alternative to cut and (sometimes) awk delta: A syntax-highlighting pager for git, diff, and grep output difftastic: A syntax-aware diff dog: A command-line DNS client dua: \u0026quot;View disk space usage and delete unwanted data, fast.\u0026quot; dust: \u0026quot;a more intuitive version of du in Rust\u0026quot; exa: \u0026quot;A modern version of ls\u0026quot;. Note: latest release is from April 2021. See discussion re: maintenance. fclones: an \u0026quot;efficient duplicate file finder\u0026quot; fd: \u0026quot;A simple, fast and user-friendly alternative to find\u0026quot; felix: tui file manager with vim-like key mapping ffsend: \u0026quot;Easily and securely share files from the command line. A fully featured Firefox Send client.\u0026quot; frum: A modern Ruby version manager written in Rust fselect: \u0026quot;Find files with SQL-like queries\u0026quot; git-cliff: \u0026quot;A highly customizable Changelog Generator that follows Conventional Commit specifications\u0026quot; gptman: \u0026quot;A GPT manager that allows you to copy partitions from one disk to another and more\u0026quot; grex: A command-line tool and library for generating regular expressions from user-provided test cases Himalaya: Command-line interface for email management htmlq: Like jq, but for HTML. Uses CSS selectors to extract bits of content from HTML files. hyperfine: Command-line benchmarking tool inlyne: \u0026quot;GPU powered yet browsless tool to help you quickly view markdown files\u0026quot; jless: \u0026quot;command-line JSON viewer designed for reading, exploring, and searching through JSON data.\u0026quot; jql: A JSON query language CLI tool just: Just a command runner (seems like an alternative to make) legdur: A \u0026quot;simple CLI program to compute hashes of large sets of files in large directory structures and compare them with a previous snapshot.\u0026quot; lemmeknow: Identify mysterious text or analyze hard-coded strings from captured network packets, malwares, and more. lfs: A Linux utility to get information on filesystems; like df but better lsd: The next generation ls command (though personally I prefer exa) macchina: Fast, minimal and customizable system information frontend. mdBook: Create books from markdown files. Like Gitbook but implemented in Rust mdcat: Fancy cat for Markdown miniserve is \u0026quot;a CLI tool to serve files and dirs over HTTP\u0026quot;. I use this as a replacement for python -m SimpleHTTPServer, or whatever the latest version of that command is. monolith: Save complete web pages as a single HTML file ouch: \u0026quot;Painless compression and decompression for your terminal\u0026quot; pastel: A command-line tool to generate, analyze, convert and manipulate colors. pipr: \u0026quot;A tool to interactively write shell pipelines.\u0026quot; procs: A modern replacement for ps written in Rust qsv: CSVs sliced, diced \u0026amp; analyzed. (A fork of xsv) rargs: xargs + awk with pattern matching support. rip: A safe and ergonomic alternative to rm ripgrep: A faster replacement for GNU’s grep command. This tool is very good. See ripgrep-all to search PDFs, E-Books, Office documents, zip, tar.gz, etc. ripsecrets: Find secret keys in your code before commiting them to git. I've contributed to this one! rnr: \u0026quot;A command-line tool to batch rename files and directories\u0026quot; sd: Intuitive find \u0026amp; replace CLI (sed alternative). skim: A command-line fuzzy finder. tealdear: A very fast implementation of tldr in Rust. teehee: \u0026quot;A modal terminal hex editor\u0026quot; tin-summer: Find build artifacts that are taking up disk space tokei: Count your (lines of) code, quickly topgrade: Upgrade all of your tools watchexec: Execute commands in response to file modifications. (Note: See cargo watch if you want to watch a Rust project.) xcp: An extended cp xh: \u0026quot;Friendly and fast tool for sending HTTP requests\u0026quot; xsv: A fast CSV command line toolkit written in Rust. (Last updated in 2018) zoxide: A smarter cd command. Calculators eva: \u0026quot;a calculator REPL, similar to bc(1)\u0026quot; (be sure to check out fend as well) fend: \u0026quot;Arbitrary-precision unit-aware calculator\u0026quot; (Documentation) Kalker: \u0026quot;a calculator with math syntax that supports user-defined variables and functions, complex numbers, and estimation of derivatives and integrals\u0026quot; printfn: \u0026quot;Arbitrary-precision unit-aware calculator\u0026quot; Tools to help working with Rust lang itself cargo-audit: Audit Cargo.lock files for crates with security vulnerabilities reported to the RustSec Advisory Database. See also: cargo-deny. cargo-geiger: Detects usage of unsafe Rust in a Rust crate and its dependencies. cargo-wipe: Cargo subcommand that recursively finds and optionally wipes all \u0026quot;target\u0026quot; or \u0026quot;node_modules\u0026quot; folders that are found in the current path. See also: kondo. cargo-crev: A cryptographically verifiable code review system for the cargo (Rust) package manager. bacon: A background Rust code checker cargo watch: Watches over your Cargo project's source. cargo-binstall: \u0026quot;Binary installation for [R]ust projects\u0026quot; kani-verifier: A \u0026quot;bit-precise model checker for Rust.\u0026quot; Terminal emulators / terminal-related Alacritty: A cross-platform, OpenGL terminal emulator. Wezterm: A GPU-accelerated cross-platform terminal emulator and multiplexer written by @wez and implemented in Rust Starship: Customizable prompt for any shell. Zellij: A terminal workspace with batteries included. Text editors written in Rust amp helix kibi: \u0026quot;A text editor in ≤1024 lines of code, written in Rust\u0026quot; lapce pepper xi zee See this \u0026quot;Battle of the [Rust] text editors\u0026quot; post from 2022.\nEmail clients himalaya: \u0026quot;Command-line interface for email management\u0026quot; Other lists of Rust command line utilities lib.rs's list \u0026quot;Awesome Rust\u0026quot; Awesome Alternatives in Rust Tips exa aliases I use in my ~/.bashrc 1if hash exa 2\u0026gt;/dev/null; then 2 alias ls=\u0026#39;exa\u0026#39; 3 alias l=\u0026#39;exa -l --all --group-directories-first --git\u0026#39; 4 alias ll=\u0026#39;exa -l --all --all --group-directories-first --git\u0026#39; 5 alias lt=\u0026#39;exa -T --git-ignore --level=2 --group-directories-first\u0026#39; 6 alias llt=\u0026#39;exa -lT --git-ignore --level=2 --group-directories-first\u0026#39; 7 alias lT=\u0026#39;exa -T --git-ignore --level=4 --group-directories-first\u0026#39; 8else 9 alias l=\u0026#39;ls -lah\u0026#39; 10 alias ll=\u0026#39;ls -alF\u0026#39; 11 alias la=\u0026#39;ls -A\u0026#39; 12fi Shameless plug: Tools that I've written in Rust Tidy: A command-line tool for combining and cleaning large word list files. Medic: Check the \u0026quot;health\u0026quot; of passwords in a KeePass database Know a good one that I don't have listed here? Let me know in the comments, a PR, on Mastodon or Twitter.\nLicensing This document is licensed under CC0 1.0 Universal (CC0 1.0) Public Domain Dedication.\n","link":"https://abarhub.github.io/blogprog/post/rust-command-line-utilities.markdown/","section":"post","tags":[],"title":"A curated list of command-line utilities written in Rust"},{"body":"DEVOXX du 12 au 14 avril Programme Video\nMecredi 12 avril Value types et Pattern matching : 1 partout, données au centre Video\nLes value types devrait être dans Java 21, pour le Patern Matching, c'est pas avant fin 2024 Comprendre et utiliser les modèles de langage d'IA Video\nPrésentation d'un REX sur les LLM. Historique de l'IA dans le domaine des LLM (fine tuning, prompting, etc...). Il dit aussi que c'est pas très bien maitrisé.\nDétectez et corrigez automatiquement les problèmes les plus fréquents avec Apache Kafka Video\nIls proposent de mettre leur outils entre les client et Kafka pour obliger à bien utiliser Kafka. Ils donnent une liste de mauvaises utilisation de Kafka.\nPlaywright : l'outil qui va révolutionner les tests end-to-end Video\nPrésentation de l'outils Playwright. L'outils semble permettre de ne pas casser les tests si l'ihm change. Il permet aussi d'éviter les problèmes ou il faut attendre que le bouton s'affiche.\nJeudi 13 avril L’IA va-t-elle changer notre métier de développeur ? Video\nPrésentation de copilote. Ca a de gros potentiel, mais le fonctionnement n'est pas identique à chaque execution. Il peut refactoriser, générer des commentaires, expliquer du code, générer le code du controleur à partir d'une liste, etc... pendant la demo, plusieurs fois, copilote a supprimer tout le code au lieux de faire ce qu'on lui demander.\nAlice au pays d'OpenTelemetry Video\nREX sur l'utilisation d'open telemetry. Il a eu pas mal de difficultés. Il a réussi pour les metrics, et les traces, mais pas pour les logs. Pour les logs, il a utiliser un autre outils.\nStorybook, une vraie bonne idée ? Video\nPrésentation de storybook. Ca a fonctionner pour eux.\nLoi de Conway : lorsque les bonnes pratiques ne suffisent pas Video\nPrésentation des problèmes d'organisation dans les entreprises qui peuvent avoir un impacte sur la construction des produits.\nLes nouveautés de Java 19 et 20 Video\nLes fonctionnalités de Java 19 et Java 20.\nGestion de la dette d'architecture dans un contexte d'hypercroissance Video\nExplication pour gérer la dette d'architecture.\nVendredi 14 avril Clean as You Code your projects Video\nPour eux, le mieux, c'est de corriger les code au fur et a mesure c-a-d que si tu corrige un bug dans une fonction, et qu'il y a d'autres problèmes dans cette fonctione, le mieux c'est de corriger ces autres problèmes en même temps.\nBootiful Spring Boot 3 Video\nPrésentationde quelques fonctionnalités de Spring boot 3. L'auteur, Josh long, a proposer d'ajouter une musique d'ascensseur pour les buils de graalvm, mais ça n'a pas été accepté.\nLes tests de charge sans être à côté de la plaque Video\nPrésentation des bonnes pratiques pour faire des tests de charges.\nLe Craft : des concepts au déploiement à l'échelle Video\nPrésentation de la mise en place du DDD. Semble trop succin. On est parti avant la fin.\nAutre Le chiffrement symétrique de A à Z (Laurent GRANGEAU et Mickael ROGER) Video\nLe chiffrement symetrique\nKubernetes, dépassionné et pour les ultra débutants Video\nLoki: Comme Prometheus Mais Pour Les Logs Video\nRésoudre AdventOfCode avec Github Copilot et OpenAI ChatGTP Video\nLincheck: Testing concurrency on the JVM par Maria Sokolova\nFoundationDB : le secret le mieux gardé des nouvelles architectures distribuées ! par Pierre Zemb et Steven Le Roux\nImproving your skills with the Debugger par Bouke Nijuis\nHidden security features of the JVM – everything you didn’t know and more par Steve Poole\n","link":"https://abarhub.github.io/blogprog/post/devoxx_2023/","section":"post","tags":["devoxx"],"title":"Devoxx 2023 du 12 au 14 avril"},{"body":"Répertoire du script BAT Pour récupérer le répertoire du script en cours en BAT, la variable est %~dp0. pour enlever le \\ à la fin, la variable est %~dp0:~0,-1%\nExemple :\n1SET mypath=%~dp0 2echo %mypath:~0,-1% ","link":"https://abarhub.github.io/blogprog/post/repertoire_script_bat/","section":"post","tags":["bat","dos"],"title":"Récupération du répertoire du script BAT"},{"body":"Renommage de fichiers 1find . -name \u0026#39;node_modules\u0026#39; -type d -prune 2 3 4find . -name \u0026#39;node_modules\u0026#39; -type d -prune -exec rm -rf \u0026#39;{}\u0026#39; + 5 6 7 8find . -name \u0026#39;node_modules\u0026#39; -o -name \u0026#39;target\u0026#39; -type d -prune 9 10 11find . -name \u0026#39;node_modules\u0026#39; -o -name \u0026#39;target\u0026#39; -type d -prune -exec rm -rf \u0026#39;{}\u0026#39; + 12 13 14find . -name \u0026#39;node_modules\u0026#39; -o -name \u0026#39;target\u0026#39; -o -name \u0026#39;.angular\u0026#39; -type d -prune -exec rm -rf \u0026#39;{}\u0026#39; + 15 16 17find . -name \u0026#39;node_modules\u0026#39; -type d -prune -exec rm -rf \u0026#39;{}\u0026#39; + 18 19 20 21find . -type f -name \u0026#34;*.zip\u0026#34; -exec sh -c \u0026#39;x=\u0026#34;{}\u0026#34;; mv \u0026#34;$x\u0026#34; \u0026#34;${x}_renamed.txt\u0026#34;\u0026#39; \\; 22 23find . -type f -name \u0026#34;*.7z\u0026#34; \u0026gt;liste_7z_files.txt 24 25 26find . -type f -name \u0026#34;*.7z\u0026#34; -exec sh -c \u0026#39;x=\u0026#34;{}\u0026#34;; mv \u0026#34;$x\u0026#34; \u0026#34;${x}_renamed.txt\u0026#34;\u0026#39; \\; 27 28find . -type f -exec rename -n -e \u0026#39;s/(.*)\\-DESKTOP\\-9EI0FN7(.*)/$1$2/\u0026#39; {} \\; ","link":"https://abarhub.github.io/blogprog/post/rename_files/","section":"post","tags":["linux"],"title":"Renommage de fichiers"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/design-patterns/","section":"tags","tags":null,"title":"Design Patterns"},{"body":"Liste de Design Pattern https://learn.microsoft.com/en-us/azure/architecture/patterns/ https://learn.microsoft.com/en-us/azure/architecture/patterns/category/design-implementation https://refactoring.guru/fr/design-patterns https://fr.wikipedia.org/wiki/Patron_de_conception https://en.wikipedia.org/wiki/Software_design_pattern ","link":"https://abarhub.github.io/blogprog/post/liste_design_patern/","section":"post","tags":["design patterns"],"title":"Liste de Design Patterns"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/css/","section":"tags","tags":null,"title":"Css"},{"body":"Liste d'outils en CSS https://dev.to/lissy93/super-useful-css-resources-1ba3\nListe d'images gratuites https://dev.to/namangarg/best-free-images-website-for-development-3idi\n","link":"https://abarhub.github.io/blogprog/post/outils_css/","section":"post","tags":["css"],"title":"Liste d'outils CSS"},{"body":"Devenir propriété d'un répertoire sous windows pour devenir propriétaire du répertoire c:\\monrepertoire sous windows, il faut executer la commande :\n1takeown.exe /f c:\\monrepertoire /r Cela permet de régler les erreur avec git du style :\n1fatal: unsafe repository (\u0026#39;c:/monrepertoire\u0026#39; is owned by someone else) 2To add an exception for this directory, call: 3 4git config --global --add safe.directory c:/monrepertoire ","link":"https://abarhub.github.io/blogprog/post/change_ownership_windows/","section":"post","tags":["windows"],"title":"Devenir propriété d'un répertoire sous windows"},{"body":"Exemple 1 1echo \u0026#39;{\u0026#34;key1\u0026#34;:\u0026#34;val1\u0026#34;, \u0026#34;myarray\u0026#34;:[\u0026#34;abc\u0026#34;, \u0026#34;def\u0026#34;, \u0026#34;ghi\u0026#34;]}\u0026#39; | jq -r \u0026#39;[.key1, .myarray[0]] | @csv\u0026#39; 2\u0026#34;val1\u0026#34;,\u0026#34;abc\u0026#34; Exemple 2 1jq -r \u0026#39;.results[] | ( .properties |map(select(.key[] contains (\u0026#34;prod\u0026#34;)) \u0026#39; ","link":"https://abarhub.github.io/blogprog/post/extract_table_from_json/","section":"post","tags":["json"],"title":"Extraction d'une table à partir de json"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/json/","section":"tags","tags":null,"title":"Json"},{"body":" 1# This is a sample Python script. 2import datetime 3import os 4 5import pandas as pd 6from io import StringIO 7 8import plotly.express as px 9 10import plotly.graph_objects as go 11 12# pd.DataFrame({\u0026#39;A\u0026#39;: [1, 2, 3]}) 13# # print(f\u0026#39;test: {pd.DataFrame}\u0026#39;) 14# 15# index = pd.date_range(\u0026#34;1/1/2000\u0026#34;, periods=8) 16# 17# print(index) 18 19 20class FileSize: 21 def __init__(self, df, filename, date): 22 self.df = df 23 self.filename = filename 24 self.date = date 25 26 27def parse(file): 28 colnames = [\u0026#39;size\u0026#39;, \u0026#39;directory\u0026#39;] 29 df = pd.read_csv(filepath_or_buffer=file, sep=\u0026#39;\\t\u0026#39;, 30 skipinitialspace=True, names=colnames) 31 32 df3 = df.query(\u0026#39;size.str.isnumeric()\u0026#39;) 33 df3 = df3.astype({\u0026#39;size\u0026#39;: \u0026#39;int64\u0026#39;}) 34 df4 = df3.sort_values(\u0026#39;size\u0026#39;) 35 filename = os.path.basename(file) 36 df4[\u0026#39;filename\u0026#39;] = filename 37 s = filename 38 s = s.removesuffix(\u0026#39;.txt\u0026#39;) 39 s = s.removeprefix(\u0026#39;res_\u0026#39;) 40 d = datetime.datetime.strptime(s, \u0026#39;%Y-%m-%d_%H-%M-%S\u0026#39;) 41 df4[\u0026#39;date\u0026#39;] = d 42 43 f = FileSize(df4, filename, d) 44 return f 45 46 47def regroupe(f, f2, name): 48 f.df[name] = 0 49 for index, row in f2.df.iterrows(): 50 dir0 = row[\u0026#39;directory\u0026#39;] 51 tmp = f.df.loc[f.df[\u0026#39;directory\u0026#39;] == dir0].index 52 # print(\u0026#39;tmp\u0026#39;, tmp) 53 if not tmp.empty: 54 # tmp[\u0026#39;size2\u0026#39;]=row[\u0026#39;size\u0026#39;] 55 # tmp.at[0,\u0026#39;size2\u0026#39;]=row[\u0026#39;size\u0026#39;] 56 # print(\u0026#39;trouve\u0026#39;, tmp, tmp[0]) 57 # print(\u0026#39;tmp\u0026#39;, tmp) 58 f.df.at[tmp[0], name] = row[\u0026#39;size\u0026#39;] 59 60 61def supprimeLignesIdentiques(df, diff): 62 # np.where((df[\u0026#39;Salary_in_1000\u0026#39;]\u0026gt;=100) \u0026amp; (df[\u0026#39;Age\u0026#39;]\u0026lt; 60) \u0026amp; (df[\u0026#39;FT_Team\u0026#39;].str.startswith(\u0026#39;S\u0026#39;))) 63 # df.query(\u0026#39;Salary_in_1000 \u0026gt;= 100 \u0026amp; Age \u0026lt; 60 \u0026amp; FT_Team.str.startswith(\u0026#34;S\u0026#34;).values\u0026#39;) 64 if diff == 0: 65 df3 = df.query(\u0026#39;size != size2\u0026#39;) 66 else: 67 # df3 = df.query(\u0026#39;((size-size2) \u0026gt;\u0026#39;+diff+\u0026#39;) and \u0026#39;) 68 # df3 = df.query(\u0026#39;(abs(size-size2) \u0026gt;\u0026#39; + str(diff) + \u0026#39;) | ((size-size2) \u0026lt; -\u0026#39; + str(diff) + \u0026#39;) \u0026#39;) 69 df3 = df.query(\u0026#39;abs(size-size2) \u0026gt;\u0026#39; + str(diff) + \u0026#39; \u0026#39;) 70 return df3 71 72 73def main(): 74 dir = \u0026#39;dir/\u0026#39; 75 76 f1 = parse(dir + \u0026#39;res_2022-11-10_15-25-30.txt\u0026#39;) 77 print(f1.df) 78 79 f2 = parse(dir + \u0026#39;res_2022-10-31_11-24-46.txt\u0026#39;) 80 print(f2.df) 81 82 regroupe(f1, f2, \u0026#39;size2\u0026#39;) 83 84 print(\u0026#39;df modifie\u0026#39;, f1.df) 85 86 diffMax = 1_000_000 87 diffMax = 100_000_000 88 89 max = 0 90 listX = [] 91 listY = [] 92 listY2 = [] 93 listYdiff = [] 94 for index, row in f1.df.iterrows(): 95 diff = abs(row[\u0026#39;size\u0026#39;] - row[\u0026#39;size2\u0026#39;]) 96 if (diff \u0026gt; max): 97 max = diff 98 if diff \u0026gt;= diffMax: 99 listX.append(row[\u0026#39;directory\u0026#39;]) 100 listY.append(row[\u0026#39;size\u0026#39;]) 101 listY2.append(row[\u0026#39;size2\u0026#39;]) 102 listYdiff.append(abs(row[\u0026#39;size\u0026#39;] - row[\u0026#39;size2\u0026#39;])) 103 104 print(\u0026#39;max\u0026#39;, max) 105 106 # fig = px.line(x=listX, y=listY, title=\u0026#34;sample figure\u0026#34;) 107 # print(fig) 108 fig = go.Figure() 109 # Create and style traces 110 fig.add_trace(go.Scatter(x=listX, y=listY, name=\u0026#39;val_\u0026#39; + str(f1.date), 111 line=dict(color=\u0026#39;firebrick\u0026#39;, width=2))) 112 fig.add_trace(go.Scatter(x=listX, y=listY2, name=\u0026#39;val_\u0026#39; + str(f2.date), 113 line=dict(color=\u0026#39;green\u0026#39;, width=2))) 114 fig.add_trace(go.Scatter(x=listX, y=listY2, name=\u0026#39;diff\u0026#39;, 115 line=dict(color=\u0026#39;blue\u0026#39;, width=2))) 116 fig.show() 117 118 119# Press the green button in the gutter to run the script. 120if __name__ == \u0026#39;__main__\u0026#39;: 121 main() ","link":"https://abarhub.github.io/blogprog/post/size_analyse.py/","section":"post","tags":["python"],"title":"Calcul la taille des répertoires"},{"body":"Liste de site pour tester les technologies web StackBlitz : HelloWorld React CodePen : HelloWorld React CodeSandbox : HelloWorld React Glitch : HelloWorld React ","link":"https://abarhub.github.io/blogprog/post/tools_test_web/","section":"post","tags":["outils"],"title":"Liste de sites pour générer tester les technologies web"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/outils/","section":"tags","tags":null,"title":"Outils"},{"body":"Liste des fichiers superieurs à une certaine taille Batch 1forfiles /P C:\\ /M *.* /S /C \u0026#34;CMD /C if @fsize gtr 524288000 echo @PATH @FSIZE\u0026#34; Powershell 1Get-ChildItem C:\\ -recurse | where-object {$_.length -gt 524288000} | Sort-Object length | ft fullname, length -auto Nushell 1ls | where size \u0026gt; 10mb | sort modified ","link":"https://abarhub.github.io/blogprog/post/liste_files_windows/","section":"post","tags":["windows"],"title":"Liste les fichiers plus grands qu'une certaine taille"},{"body":" 1ECHO OFF 2CLS 3 4REM https://www.sevenforums.com/tutorials/78083-batch-files-create-menu-execute-commands.html 5 6:MENU 7ECHO. 8ECHO ............................................... 9ECHO PRESS 1, 2 OR 3 to select your task, or 4 to EXIT. 10ECHO ............................................... 11ECHO. 12ECHO 1 - Open Notepad 13ECHO 2 - Open Calculator 14ECHO 3 - Open Notepad AND Calculator 15ECHO 4 - EXIT 16ECHO. 17SET /P M=Type 1, 2, 3, or 4 then press ENTER: 18IF %M%==1 GOTO NOTE 19IF %M%==2 GOTO CALC 20IF %M%==3 GOTO BOTH 21IF %M%==4 GOTO EOF 22:NOTE 23cd %windir%\\system32\\notepad.exe 24start notepad.exe 25GOTO MENU 26:CALC 27cd %windir%\\system32\\calc.exe 28start calc.exe 29GOTO MENU 30:BOTH 31cd %windir%\\system32\\notepad.exe 32start notepad.exe 33cd %windir%\\system32\\calc.exe 34start calc.exe 35GOTO MENU 36 37:EOF 38echo exit ","link":"https://abarhub.github.io/blogprog/post/menu.bat/","section":"post","tags":["windows"],"title":"Création d'un menu en bat"},{"body":"Exemple de commandes Tar 1# Deflate / Compress 2$ tar -czf archive.tar.gz /path/files 3 4# Inflate / Uncompress 5$ tar -xzf archive.tar.gz 6 7# Extract file to a defined directory 8$ tar -xzf archive.tar.gz -C /target/directory 9 10# Append a file to an existing archive 11$ tar -zu archive.tar.gz -C /target/file Common options z :\tcompress with gzip c :\tcreate an archive u :\tappend files which are newer than the corresponding copy ibn the archive f :\tfilename of the archive v :\tverbose, display what is inflated or deflated a :\tunlike of z, determine compression based on file extension ","link":"https://abarhub.github.io/blogprog/post/tar/","section":"post","tags":["tar"],"title":"Description of tar command"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/tar/","section":"tags","tags":null,"title":"Tar"},{"body":"JQuery 1\u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-sm btn-primary\u0026#34; disabled\u0026gt;Upload file\u0026lt;/button\u0026gt; 1$(\u0026#39;input[type=file]\u0026#39;).change(function(){ 2 if($(\u0026#39;input[type=file]\u0026#39;).val()==\u0026#39;\u0026#39;){ 3 $(\u0026#39;button\u0026#39;).attr(\u0026#39;disabled\u0026#39;,true) 4 } 5 else{ 6 $(\u0026#39;button\u0026#39;).attr(\u0026#39;disabled\u0026#39;,false); 7 } 8}) src\nVanilla Javascript 1\u0026lt;input placeholder=\u0026#34;Enter some text\u0026#34; name=\u0026#34;name\u0026#34; id=\u0026#39;input\u0026#39;/\u0026gt; 2\u0026lt;button id=\u0026#39;button\u0026#39; disabled\u0026gt;Réserver\u0026lt;/button\u0026gt; 1let inputElt = document.getElementById(\u0026#39;input\u0026#39;); 2let btn = document.getElementById(\u0026#39;button\u0026#39;); 3 4inputElt.addEventListener(\u0026#34;input\u0026#34;, function(){ 5 btn.disabled = (this.value === \u0026#39;\u0026#39;); 6}) src\n","link":"https://abarhub.github.io/blogprog/post/disable_button_if_empty/","section":"post","tags":["web","javascript"],"title":"Disable button if input is empty"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/javascript/","section":"tags","tags":null,"title":"Javascript"},{"body":"Pour executer la commande dependency-tree en fixant la version, il faut executer la commande :\n1mvn org.apache.maven.plugins:maven-dependency-plugin:3.3.0:tree ","link":"https://abarhub.github.io/blogprog/post/depandancy_tree_version/","section":"post","tags":["maven"],"title":"Execution du plugin maven dependancy tree en indiquant la version"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/maven/","section":"tags","tags":null,"title":"Maven"},{"body":"State of JS State of JS\n2021 2020 Stack Overflow Developer Survey 2021 2020 2022 Index Toibe Dernier index\n","link":"https://abarhub.github.io/blogprog/post/stat_coding/","section":"post","tags":["windows"],"title":"Statistique de codage"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/cheatsheet/","section":"tags","tags":null,"title":"Cheatsheet"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/elasticsearch/","section":"tags","tags":null,"title":"Elasticsearch"},{"body":"Elasticsearch Explications Il y a 2 types de recherche :\nType de recherche Score Cache Query Variable Non Filter Fixe Oui Exemple :\n1GET /_search 2{ 3 \u0026#34;query\u0026#34;: { 4 \u0026#34;bool\u0026#34;: { 5 \u0026#34;must\u0026#34;: { 6 \u0026#34;match\u0026#34;: { 7 \u0026#34;message\u0026#34;: \u0026#34;this is a test\u0026#34; 8 } 9 }, 10 \u0026#34;filter\u0026#34;: [ 11 { 12 \u0026#34;term\u0026#34;: { 13 \u0026#34;user\u0026#34;: \u0026#34;kimchy\u0026#34; 14 } 15 }, 16 { 17 \u0026#34;term\u0026#34;: { 18 \u0026#34;user\u0026#34;: \u0026#34;herald\u0026#34; 19 } 20 } 21 ], 22 \u0026#34;must_not\u0026#34;: { 23 \u0026#34;term\u0026#34;: { 24 \u0026#34;user\u0026#34;: \u0026#34;cassie\u0026#34; 25 } 26 }, 27 \u0026#34;should\u0026#34;: { 28 \u0026#34;term\u0026#34;: { 29 \u0026#34;user\u0026#34;: \u0026#34;johnny\u0026#34; 30 } 31 } 32 } 33 }, 34 \u0026#34;aggs\u0026#34;: { 35 \u0026#34;user_terms\u0026#34;: { 36 \u0026#34;terms\u0026#34;: { 37 \u0026#34;field\u0026#34;: \u0026#34;user\u0026#34; 38 } 39 } 40 } 41} Query String Exemple :\n1GET /_search 2{ 3 \u0026#34;query\u0026#34;: { 4 \u0026#34;query_string\u0026#34;: { 5 \u0026#34;query\u0026#34;: \u0026#34;(new york city) OR (big apple)\u0026#34;, 6 \u0026#34;default_field\u0026#34;: \u0026#34;content\u0026#34; 7 } 8 } 9} les AND et les OR doivent être en majuscule\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html\nSimple Query https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html\nRequetes Url Signification GET _cat Information generale GET /_cat/indices Liste tous les indexes GET /_cat/health L'etat du cluster Elasticsearch GET / La version d'elasticsearch GET _cat/aliases La liste des alias GET //_mapping Le mapping de l'index POST //_search recherche sur l'index POST //_search recherche sur l'index POST //_count comptage sur l'index les operateurs de recherche https://coralogix.com/blog/42-elasticsearch-query-examples-hands-on-tutorial/\nExemples Exemple de requete en ElasticSearch :\n1POST /my-index-000001/_search 2{ 3 \u0026#34;query\u0026#34;: { 4 \u0026#34;match\u0026#34;: { 5 \u0026#34;[user.id](http://user.id/)\u0026#34;: \u0026#34;kimchy\u0026#34; 6 } 7 }, 8 \u0026#34;fields\u0026#34;: [ 9 \u0026#34;[user.id](http://user.id/)\u0026#34;, 10 \u0026#34;http.response.*\u0026#34;, 11 { 12 \u0026#34;field\u0026#34;: \u0026#34;@timestamp\u0026#34;, 13 \u0026#34;format\u0026#34;: \u0026#34;epoch_millis\u0026#34; 14 } 15 ], 16 \u0026#34;_source\u0026#34;: false 17} Exemple trouvé ici\n1GET /_search 2{ 3 \u0026#34;query\u0026#34;: { 4 \u0026#34;simple_query_string\u0026#34; : { 5 \u0026#34;query\u0026#34;: \u0026#34;\\\u0026#34;fried eggs\\\u0026#34; +(eggplant | potato) -frittata\u0026#34;, 6 \u0026#34;fields\u0026#34;: [\u0026#34;title^5\u0026#34;, \u0026#34;body\u0026#34;], 7 \u0026#34;default_operator\u0026#34;: \u0026#34;and\u0026#34; 8 } 9 } 10} 1{ 2 \u0026#34;query\u0026#34;: { 3 \u0026#34;match\u0026#34;: { 4 \u0026#34;my_field\u0026#34;: \u0026#34;meaning\u0026#34; 5 } 6 }, 7 \u0026#34;fields\u0026#34;: [ 8 \u0026#34;name\u0026#34;, 9 \u0026#34;surname\u0026#34;, 10 \u0026#34;age\u0026#34; 11 ], 12 \u0026#34;from\u0026#34;: 100, 13 \u0026#34;size\u0026#34;: 20 14} 1curl \u0026#34;localhost:9200/_search?q=name:john~1 AND (age:[30 TO 40} OR surname:K*) AND -city\u0026#34; 1% curl \u0026#39;localhost:9200/_cat/indices?format=json\u0026amp;pretty\u0026#39; 2[ 3 { 4 \u0026#34;pri.store.size\u0026#34;: \u0026#34;650b\u0026#34;, 5 \u0026#34;health\u0026#34;: \u0026#34;yellow\u0026#34;, 6 \u0026#34;status\u0026#34;: \u0026#34;open\u0026#34;, 7 \u0026#34;index\u0026#34;: \u0026#34;my-index-000001\u0026#34;, 8 \u0026#34;pri\u0026#34;: \u0026#34;5\u0026#34;, 9 \u0026#34;rep\u0026#34;: \u0026#34;1\u0026#34;, 10 \u0026#34;docs.count\u0026#34;: \u0026#34;0\u0026#34;, 11 \u0026#34;docs.deleted\u0026#34;: \u0026#34;0\u0026#34;, 12 \u0026#34;store.size\u0026#34;: \u0026#34;650b\u0026#34; 13 } 14] 1curl -X PUT \u0026#39;http://localhost:9200/students\u0026#39; -d \u0026#39;{ 2 \u0026#34;mappings\u0026#34;: { 3 \u0026#34;student\u0026#34;: { 4 \u0026#34;properties\u0026#34;: { 5 \u0026#34;name\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;keyword\u0026#34; }, 6 \u0026#34;degree\u0026#34; { \u0026#34;type\u0026#34;: \u0026#34;keyword\u0026#34; }, 7 \u0026#34;age\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;integer\u0026#34; } 8 }, 9 \u0026#34;properties\u0026#34;: { 10 \u0026#34;performance\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;keyword\u0026#34; } 11 } 12 } 13 } 14 }\u0026#39; 1GET /my-index-000001/_search 2{ 3 \u0026#34;timeout\u0026#34;: \u0026#34;2s\u0026#34;, 4 \u0026#34;query\u0026#34;: { 5 \u0026#34;match\u0026#34;: { 6 \u0026#34;user.id\u0026#34;: \u0026#34;kimchy\u0026#34; 7 } 8 } 9} 1GET /my-index-000001/_search 2{ 3 \u0026#34;track_total_hits\u0026#34;: true, 4 \u0026#34;query\u0026#34;: { 5 \u0026#34;match\u0026#34; : { 6 \u0026#34;user.id\u0026#34; : \u0026#34;elkbee\u0026#34; 7 } 8 } 9} Des sites avec d'autres exemples:\nhttps://gist.github.com/ruanbekker/e8a09604b14f37e8d2f743a87b930f93 https://www.bmc.com/blogs/elasticsearch-commands/ https://lzone.de/cheat-sheet/ElasticSearch https://elasticsearch-cheatsheet.jolicode.com/ ","link":"https://abarhub.github.io/blogprog/post/elasticsearch_cheat_sheet/","section":"post","tags":["elasticsearch","cheatsheet"],"title":"Exemple de requete en elasticsearch"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/go/","section":"tags","tags":null,"title":"Go"},{"body":"Librairie pour usage standard en Golang Log log standard : C'est la librairie standard glog : gestion des logs logrus : gestion des logs structurée Tests Testify : gestion des assertions dans les tests go-spew : permet de loguer les structures pour le débogage pretty : affichage de façon lisible pour le debugage Configuration Viper : gestion de la configuration gestion des paramètres CLI Cobra : Gestion des paramètres CLI Top Gopher\n","link":"https://abarhub.github.io/blogprog/post/go_library/","section":"post","tags":["go"],"title":"Librairie pour usage standard en Golang"},{"body":"Java Code analyser Checkstyle : Vérification du formatage du code Error Prone : Détection des bugs. Il y a un systeme d'extension Infer : jQAssistant : permet de vérifier des règles de codage, par exemple entre package NullAway : Détecte les pointeurs null PMD : Sonar : outils d'analyse des codes sources Java et C/C++ etc... Spoon : il peut transformer le code. Il gère jusqu'a Java 16 Spotbugs : C'est le successeur de findbug Semmle : langage QL pour rechercher des bugs dans les sources bddbddb : analyse de bytecode de la JVM Reason : ajout d'un systeme de type à la ocaml au javascript ","link":"https://abarhub.github.io/blogprog/post/java_code_analyser/","section":"post","tags":["java"],"title":"Java Code analyser"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/langages/","section":"tags","tags":null,"title":"Langages"},{"body":" langage C like Typage Commentaire C Oui Oui Difficile à programmer. Facile de faire des bug C++ Oui Oui Difficile à programmer. Facile de faire des bug Java Oui Oui Simple à utiliser. Détecte pas mal de bugs à la compilation C# Oui Oui Go Non Oui Rust Non Oui Carbon Non Oui Haskell Non Oui V Non Oui Pascal Non Oui Eiffel Non Oui Prolog Non Non OCaml Non Oui Javascript Non faible (au runtime) Typescript Non Oui Python Non faible Ruby Non faible Nim Non faible Perl Non faible Dart Oui fort Zig Non faible datalog Non faible minikraken Non faible kotlin Non fort ","link":"https://abarhub.github.io/blogprog/post/langages/","section":"post","tags":["langages"],"title":"Liste de langages"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/c/","section":"tags","tags":null,"title":"C"},{"body":"Memory library MSS: Memory Supervision System sourceforge\nYet another debugging malloc git\nDebugger Softice : debugger noyau wikipedia\nBoundsChecker : débuggeur mémoire wikipedia\nPurifyPlus : débuggeur mémoire wikipedia\nValgrind : débuggeur mémoire wikipedia\ndmalloc : débuggeur mémoire wikipedia\n","link":"https://abarhub.github.io/blogprog/post/c_library_tools/","section":"post","tags":["c","librairie"],"title":"C library and tools"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/librairie/","section":"tags","tags":null,"title":"Librairie"},{"body":"Gestion du positionnement en CSS Grid Flex\n","link":"https://abarhub.github.io/blogprog/post/grid_flex_css/","section":"post","tags":["web","css"],"title":"Tutoriel sur la gestion du positionnement en CSS avec Grid et Flex"},{"body":"Il faut penser à unsubscribe les observables.\n1import { interval } from \u0026#39;rxjs\u0026#39;; 2 3const data$ = interval(1000); 4 5 6const subscription = data$.subscribe({ 7 next: value =\u0026gt; console.log(value), 8 error: error =\u0026gt; console.error(error), 9 complete: () =\u0026gt; console.log(\u0026#39;DONE!\u0026#39;) 10}); 11 12// dans le ngOnDestroy() 13subscription.unsubscribe(); Une façon simple de le gérer, c'est d'utiliser takeUntil\n1import { Component, OnInit, OnDestroy } from \u0026#39;@angular/core\u0026#39;; 2 3import { Subject, interval } from \u0026#39;rxjs\u0026#39;; 4import { takeUntil } from \u0026#39;rxjs/operators\u0026#39;; 5 6@Component({ ... }) 7export class AppComponent implements OnInit, OnDestroy { 8 isOver$: Subject\u0026lt;boolean\u0026gt; = new Subject\u0026lt;boolean\u0026gt;(); 9 10 constructor(private apollo: Apollo) {} 11 12 ngOnInit() { 13 this.myService.getAll() 14 .pipe(takeUntil(this.isOver$)) 15 .subscribe(data =\u0026gt; { 16 console.info(data); 17 },(e)=\u0026gt;{ 18 console.error(\u0026#34;Error\u0026#34;, e); 19 }); 20 } 21 22 ngOnDestroy() { 23 this.isOver$.next(true); 24 this.isOver$.unsubscribe(); 25 } 26} ","link":"https://abarhub.github.io/blogprog/post/unsubscribe/","section":"post","tags":["angular","web"],"title":"Unsubscribe des observables"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/curl/","section":"tags","tags":null,"title":"Curl"},{"body":"Injection d'un fichier (Methode 1) 1jq -Rn \u0026#39;.instances[0].image.b64 = inputs\u0026#39; \u0026lt; \u0026lt;(base64 volunteers.jpg | tr -d \\\\n) \u0026gt; input.json cf stakoverflow\nInjection d'un fichier (Methode 2) 1jq -Rs --rawfile pub id_rsa.pub \u0026#39;{pem: ., pub: $pub}\u0026#39; id_rsa cf stakoverflow\nEncodage en base 64 1jq \u0026#39;\u0026#34;Basic \u0026#34; + (\u0026#34;\\(.user):\\(.pass)\u0026#34;|@base64)\u0026#39; \u0026lt;basic.json cf stakoverflow\n","link":"https://abarhub.github.io/blogprog/post/include_file_in_json/","section":"post","tags":["curl","json"],"title":"Injection un fichier dans du json en l'encodant en base64"},{"body":"Commandes :\npowercfg –energy powercfg /batteryreport /output \u0026quot;C:\\temp\\diagnostic_batterie.html\u0026quot; HWRMonitor HWiNFO (Payant) BatteryCare Quelques site qui donnes des explications générales :\nComment tester la batterie de son ordinateur portable sous Windows (Windows 10, Windows 8…) ? Tester la batterie d'un PC portable sous Windows Tuto: logiciel pour tester la batterie sur ordinateur portable – Windows 10 ","link":"https://abarhub.github.io/blogprog/post/battery/","section":"post","tags":["windows"],"title":"Gestion de la batterie sous Windows"},{"body":"Devoxx 2022 du 20 au 22 avril Mercredi 20 avril Programme Videos\nSpring Security - décodage et démystification Il faut mieux créer un bean plutot que de dériver de WebSecurityConfiguration Il est possible d'ajouter une methode dans la configuration du http Pour débuger, on peut augmenter le niveau de log ou mettre des points d'arret pour débuger Video\nLoom nous Protègera-t-il du Braquage Temporel ? C'est des taches qui ne sont pas des vrai thread. On peut en créer des millions sans problème, et sans utiliser 2Mo de stack par thread. Par contre cela pose problème si dans le code il y a des accès IO ou avec du code C. Ne sera pas pret avant Java 20 au moins.\nVidéo\nGitpod: la fin des frictions inutiles pour contribuer à un projet OSS ? L'idée, c'est de créer un contener distant qui peut être utiliser pour travailler avec un environnement pret à être utilisé. La version gratuite permet d'utiliser 50 heure par mois. Il faut penser à fermer la session pour ne pas utiliser inutilement des ressources.\nVidéo\nBien maîtriser les Dev Tools de vos navigateurs Il y a l'outils Lighthouse qui permet en un clique de savoir s'il y a des problèmes dans la page, et si elle est mal conçu. Voir les recommendations d'accessibilité de chrome (il existe une norme). Afficher l'ordre des composants pour voir s'il est correcte et s'il existe. Voir le temps de chargement des pages. Modifier les elements flex. Enregistrer les modification pour les garder quand la page est rechargée. Enregistrer les actions et les rejouer.\nVidéo\nConstruisons ensemble une application Micro-Frontend multi-frameworks avec Webpack 5 Module Federation Ca a l'air assez simple de le mettre en place. Il faut voir la vidéo pour voir comment faire.\nVidéo\nJeudi 21 avril Programme\nOAUTH 2.1 expliqué simplement (même si tu n'es pas dev) ! Il y a peut de différence entre OAuth 2.0 et OAuth 2.1.\nIl faut mettre l'url complete pour la page de redirection Il faut utiliser implicite flow avec PKCE Vidéo\nLe (dés)amour des tests web Le property based testing permet de tester des cas complexe (problème de latence) Il faut mocker les appels distants. Il y a un librairie qui permet de faire ça bien. Il faut essayer de faire des tests indépendant de l'odre d'affichage. Il faut que les tests soit rapides, sinon ils ne seront pas lancées. Si le propertie based testing trouve un bug interressant, il faut mieux faire un testpour ce cas. Il n'est pas conseillé de faire la pyramide de test pour les tests du front. Pour les TU, il ne doit pas y en avoir trop. Il faut mieux se concentrer soit sur les tests d'intégrations, soit les tests fonctionnelles. Voir fast-check pour faire des tests web. Voir la video vers 27min pour des tests property based testing sur les traitements concurents et détecter les races conditions.\nVidéo\nFuzzing en Go Le fussing est une nouvauté de golang 1.18; Il est fait en prenant en compte la structure du code, c-a-d qu'il va essayer de parcourir toutes les branches. Il permet de détecter les problèmes de sécurités.\nVidéo\nWhat's cooking in Maven? Les maven warpeur permet de gérer la version au niveau du projet. Cela fixe la version de maven. par contre, les dépendances maven (jar) sont aussi dans le répertoire du projet. Cela fonctionne déja en maven 3.x Build/Consum POM permet de mettre à jour la version du pom au moment du déploiement. Cela permet que si un projet a la version que dans le pom du parent, au moment du deploiement la version est ajouté dans le pom enfant, ce qui posera moins de problème pour l'utilisation de la dépendance. Ce sera implémenté pour maven 4.x Maven Deamon sont un deamon qui va accélerer le build. Il a montré un exemple ou le premier build met 13 secondes et les suivants 0.0 secondes. Cela build de facon paralèle. Cela fonctionne déjà en maven 3.x Vidéo\nCloud public, mais données privées ! C'est un outils pour cripter avant d'envoyer les données sur des clouds.\nSave the date ! Il faut stoquer la date avec le décalage de date dans les bases de données.\nVidéo\nVendredi 22 avril Programme\nKafka Streams @ Carrefour : du big data à la vitesse de l'éclair Il faut penser à netoyer les topics interns et les consumer groups qui ne sont plus utilisées.\nVideo\nÀ la découverte des Docker Dev Environments C'est des contener sur le poste du dev. Permet de partager facilement le projet et l'environnement entre dev.\nVideo\nTests Cucumber: légendes et réalité Les tests cumcumber sont bien pour faire des tests fonctionnelles. Ils peuvent être fait en collaboration entre ceux qui spec et les dev. En general, ils sont lisibles par des non dev, et ça permet d'être sur de ce qui est testé correspond aux fonctions demandé par le client.\nVideo\nMieux maitriser TLS, OpenSSL et les certificats Description du protocole TLS et des certificats.\nVideo\nAutre Pour voir les nouveautés d'ElasticSearch entre les versions : https://github.com/blookot/elastic-releases\nL'outils Tournesole App permet de juger la pertinance des sites web. C'est un travail collaboratif.\n","link":"https://abarhub.github.io/blogprog/post/devoxx_2022/","section":"post","tags":["devoxx"],"title":"Devoxx 2022"},{"body":"Linux Encode :\n1base64 data.txt \u0026gt; data.b64 Décode :\n1base64 -d data.b64 \u0026gt; data.txt Windows Encode :\n1certutil -encode data.txt tmp.b64 \u0026amp;\u0026amp; findstr /v /c:- tmp.b64 \u0026gt; data.b64 Décode :\n1certutil -decode data.b64 data.txt ","link":"https://abarhub.github.io/blogprog/post/base64/","section":"post","tags":["shell","windows","linux"],"title":"Encode et décode en Base64"},{"body":"Enum dans un Template Pour utilisation d'une enum dans un template, il faut ajouter le code suivant dans le composant :\n1public readonly myEnum : typeof MyEnum = MyEnum; Apres on peut l'utiliser dans le template MyEnum.VALUE1\nCommunication parent/enfant Le parent appel l'enfant : Parent.component.ts :\n1import {Subject} from \u0026#39;rxjs/Subject\u0026#39;; 2... 3export class ParentComp { 4 changingValue: Subject\u0026lt;boolean\u0026gt; = new Subject(); 5 6 tellChild() { 7 this.changingValue.next(true); 8 } 9} Parent.component.html\n1\u0026lt;my-comp [changing]=\u0026#34;changingValue\u0026#34;\u0026gt;\u0026lt;/my-comp\u0026gt; Child.component.ts\n1... 2export class ChildComp implements OnInit{ 3 @Input() changing: Subject\u0026lt;boolean\u0026gt;; 4 5 ngOnInit(){ 6 this.changing.subscribe(v =\u0026gt; { 7 console.log(\u0026#39;value is changing\u0026#39;, v); 8 }); 9 } 10} Fermer un observable Pour fermer un observable de façon automatique\n1@Component({...}) 2export class AppComponent implements OnInit, OnDestroy { 3 over$ = new Subject(); 4 5 ngOnInit () { 6 var observable$ = Rx.Observable.interval(1000); 7 observable$ 8 .pipe(takeUntil(this.over$)) 9 .subscribe(x =\u0026gt; console.log(x)); 10 } 11 12 ngOnDestroy() { 13 this.over$.next(); 14 this.over$.complete(); 15 } 16} Pour d'autres façon de le faire, voir ici : StackOverflow\n","link":"https://abarhub.github.io/blogprog/post/angular_cheatsheet/","section":"post","tags":["angular","cheatsheet"],"title":"Angular cheatsheet"},{"body":" Loading an executable into current process's memory, then executing it Awesome Compilers A Bestiary of Single-File Implementations of Programming Languages awesome-internals ","link":"https://abarhub.github.io/blogprog/post/internal_programming/","section":"post","tags":["shell","linux","windows"],"title":"Internal Programming"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/hugo/","section":"tags","tags":null,"title":"Hugo"},{"body":"","link":"https://abarhub.github.io/blogprog/categories/syntax/","section":"categories","tags":null,"title":"Syntax"},{"body":"","link":"https://abarhub.github.io/blogprog/series/themes-guide/","section":"series","tags":null,"title":"Themes Guide"},{"body":"Page bundles are an optional way to organize page resources within Hugo.\nYou can opt-in to using page bundles in Hugo Clarity with usePageBundles in your site configuration or in a page's front matter. Read more about usePageBundles.\nWith page bundles, resources for a page or section, like images or attached files, live in the same directory as the content itself rather than in your static directory.\nHugo Clarity supports the use of leaf bundles, which are any directories within the content directory that contain an index.md file. Hugo's documentation gives this example:\n1content 2├── about 3│ ├── index.md 4├── posts 5│ ├── my-post 6│ │ ├── content1.md 7│ │ ├── content2.md 8│ │ ├── image1.jpg 9│ │ ├── image2.png 10│ │ └── index.md 11│ └── my-other-post 12│ └── index.md 13│ 14└── another-section 15 ├── .. 16 └── not-a-leaf-bundle 17 ├── .. 18 └── another-leaf-bundle 19 └── index.md In the above example `content` directory, there are four leaf\rbundles:\rabout: This leaf bundle is at the root level (directly under content directory) and has only the index.md.\nmy-post: This leaf bundle has the index.md, two other content Markdown files and two image files. image1 is a page resource of my-post and only available in my-post/index.md resources. image2 is a page resource of my-post and only available in my-post/index.md resources.\nmy-other-post: This leaf bundle has only the index.md.\nanother-leaf-bundle: This leaf bundle is nested under couple of directories. This bundle also has only the index.md.\nThe hierarchy depth at which a leaf bundle is created does not matter, as long as it is not inside another leaf bundle.\nAdvantages to using page bundles The image below is part of the bundle of this page, and is located at content/post/bundle/building.png. Because it's within this page's bundle, the markup for the image only has to specify the image's filename, building.png.\nIf you ever change the name of the directory in which this Markdown file and the image reside, the reference to the image would not need to be updated.\nIn addition to more cleanly organizing your content and related assets, when using page bundles, Hugo Clarity will automatically generate markup for modern image formats, which are smaller in file size.\nFor instance, when you reference an image like building.png, Hugo Clarity will check to see if the same image (based on filename) exists in WebP, AVIF or JXL formats. If you inspect the image above, you'll see a \u0026lt;source\u0026gt; element for building.webp, because that file is also present. Hugo Clarity will only include the markup if these images exist.\nBrowsers that support these formats and the \u0026lt;picture\u0026gt; element will load them, while browsers that do not will fall-back to the default image. Read more about this process.\nFinally, note that page assets can be further managed and refined within the page's front matter if you wish, and are not limited to images alone.\nDisadvantages to using page bundles Page resources in a bundle are only available to the page with which they are bundled — that means you can't include an image with one page and then reference it from another.\nImages that are being used in multiple places are more appropriate for your Hugo assets directory. Unlike files in the Hugo static directory, files in the assets directory can be run through Hugo Pipes, which includes image processing.\n","link":"https://abarhub.github.io/blogprog/post/bundle/","section":"post","tags":["Hugo"],"title":"Using Hugo page bundles"},{"body":"Pour lister les répertoires qui ont des fichiers jpeg :\n1find / -iname \u0026#34;*.jpg\u0026#34; -exec dirname \u0026#39;{}\u0026#39; \\; | uniq -c \u0026gt;res.txt Apres, pour trié cette liste, c'est :\n1cat res.txt | sort -n ","link":"https://abarhub.github.io/blogprog/post/count_jpg_files/","section":"post","tags":["shell","linux","image","jpg"],"title":"Compter les fichiers jpeg par répertoire"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/git/","section":"tags","tags":null,"title":"Git"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/image/","section":"tags","tags":null,"title":"Image"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/jpg/","section":"tags","tags":null,"title":"Jpg"},{"body":"Linux Fetch pour mettre à jour les branches\n1git fetch -p Suppression des branches locales\n1git branch --merged | grep -v \u0026#39;\\*\\|master\\|main\\|develop\u0026#39; | xargs -n 1 git branch -d Suppression des branches distantes\n1git branch -r --merged | grep -v \u0026#39;\\*\\|master\\|main\\|develop\u0026#39; | sed \u0026#39;s/origin\\///\u0026#39; | xargs -n 1 git push --delete origin Windows Suppression des branches locales mergées\n1git branch --format \u0026#34;%(refname:short)\u0026#34; --merged develop | Select-String \u0026#34;develop|master|HEAD\u0026#34; -notMatch | where{$_ -ne \u0026#34;\u0026#34;} | Out-GridView -PassThru | % { git branch -d $_ } Suppression des branches distantes mergées\n1git branch --format \u0026#34;%(refname:short)\u0026#34; -r --merged develop | Select-String \u0026#34;develop|master|HEAD\u0026#34; -notMatch | Out-String -Stream | where{$_ -ne \u0026#34;\u0026#34;} | Out-GridView -PassThru | Foreach-Object { ($_) -replace \u0026#34;origin\\/\u0026#34;,\u0026#34;\u0026#34; } | where{$_ -ne \u0026#34;\u0026#34;} | % { git push origin --delete $_ } cf : StackOverflow PowerShell\n","link":"https://abarhub.github.io/blogprog/post/delete_merged_branche/","section":"post","tags":["linux","windows","shell","powershell","git"],"title":"Suppression des branches mergées"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/build/","section":"tags","tags":null,"title":"Build"},{"body":"Le plus simple c'est de lire le fichier version.properties dans le classpath.\n1try(InputStream inputStream = getClass().getClassLoader().getResourceAsStream(\u0026#34;version.properties\u0026#34;)){ 2 Properties prop = new Properties(); 3 prop.load(inputStream); 4 String version=prop.get(\u0026#34;version\u0026#34;,\u0026#34;1.0.0\u0026#34;); 5 return version; 6} Il existe d'autres façons de faire :\nutiliser la classe BuildProperties lire le manifest ajouter la version dans la configuration Autres solutions:\n[https://stackoverflow.com/questions/3697449/retrieve-version-from-maven-pom-xml-in-code] [https://www.baeldung.com/spring-boot-build-properties] ","link":"https://abarhub.github.io/blogprog/post/springboot_version/","section":"post","tags":["java","spring boot","version","maven","build"],"title":"Récupérer la version avec spring boot"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/spring-boot/","section":"tags","tags":null,"title":"Spring Boot"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/version/","section":"tags","tags":null,"title":"Version"},{"body":"\r","link":"https://abarhub.github.io/blogprog/post/map/","section":"post","tags":null,"title":"Using OpenStreetMap"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/ligne-de-commande/","section":"tags","tags":null,"title":"Ligne De Commande"},{"body":"Liste d'outils en ligne de commande Voici une liste d'outils :\nOutils généraux Httpie : curl like jq : manipulate json Kafkahq : manage kafka bat : cat en rust exa : ls en rust fd : find en rust procs : ps en rust sd : find \u0026amp; replace en rust dust : du en rust starship : shell en rust ripgrep : grep en rust tokei : analyse du code source (nombre de lignes, nombre de fichiers, etc...) hyperfine : pour faire des benchmark ytop : équivalent de top en Rust tealdeer : tldr en rust bandwhich : affichage des informations sur le réseau (débit, processus, etc...) grex : génération d'expression régulière en fonction d'exemple rmesg : dmesg en rust zoxide : cd en rust delta : disualisation de diff git nushell : shell en rust angle-grinder : recherche dans les fichiers de logs visidata : visualisation de données tabulaires lnav : visualisation des logs dans un terminal coreutils : réimplémentation des outils unix en rust q : faire une requete sql en en ligne de commande sur du csv broot : affichage arborescent des répertoire, avec possibilité de faire des opérations rebond : recherche la stacktrace dans stackoverflow speed-test : test la connexion internet graphtage : comparaison de json jc : convertie en json la sortie des commandes unix rq : transformation entre différents formats (json, csv, etc...) iredis : client redis gnuplot : Pour faire des graphiques en ligne de commandes (Hitogramme, courbes 2Det 3D, etc...). La sortie peut être une image. ploticus : permet de générer des graphiques. age : cryptage de fichiers avec cryptage asymétrique rage : age en rust scrypt : cryptage symetrique de fichiers sops : stokage de secrets mkcert : création de certificat local ugrep : recherche dans les archives zip/gz/etc... csvkit : traitement de fichier CSV fzf : outils pour filter les fichiers à traiter Analyses des logs angle-grinder : recherche des les logs avec une expression lnav : analyse dans les logs en mode texte sumoshell : recherche dans les logs avec une expression manipulation du json/xml Pour extraire du json, il y a les outils :\njq : outils pour extraire des données en json github. Il y a une page pour teste en ligne jqplay Pour extraire du xml :\nxidel : outils pur extraire du xml avec aussi du json github. Il peut aussi transformer du json. Il gère le XPath, le XQuery, etc... Une page qui recense des outils pour extraire du xml : Baeldung\nOutils en ligne https://rawgraphs.io/ : outils de visualisation des données https://www.geogebra.org/ : visualisation de graphe et résolutation de formule mathématique en ligne Outils Windows WinMerge windirstat masscode : gestionnaire de bout de code (code snippets manager) Quiver : notebook pour developpeur cacher : gestionnaire de code qalculate : calculatrice windows/linux avec GUI et en ligne de commande Autre outils en rust : https://zaiste.net/posts/shell-commands-rust/ une autre liste d'outils : https://github.com/trimstray/the-book-of-secret-knowledge Analyse des logs : https://gist.github.com/abarhub/0ace4e9f2d9d82029f7347aed14f2ad3 Liste d'outils pour l'éducation : https://linuxfr.org/users/space_e_man/journaux/dual-oschool-free-software-pack age : https://linuxfr.org/news/sortie-de-la-version-1-0-0-de-age liste d'outils modernes en lignes de commandes : https://github.com/ibraheemdev/modern-unix liste d'outils open source : https://github.com/RunaCapital/awesome-oss-alternatives ","link":"https://abarhub.github.io/blogprog/post/liste_outils/","section":"post","tags":["outils","ligne de commande"],"title":"Liste d'outils "},{"body":" 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3\u0026lt;head\u0026gt; 4\t\u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; 5 \u0026lt;title\u0026gt;Example of HTML Hello world\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8 \u0026lt;p\u0026gt;Hello World\u0026lt;/p\u0026gt; 9\u0026lt;/body\u0026gt; 10\u0026lt;/html\u0026gt; ","link":"https://abarhub.github.io/blogprog/post/helloworld_html/","section":"post","tags":["html","helloworld"],"title":"Hello world en HTML"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/helloworld/","section":"tags","tags":null,"title":"Helloworld"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/html/","section":"tags","tags":null,"title":"Html"},{"body":"Installation de node et npm avec maven Il faut utiliser l'outils : frontend-maven-plugin\nExemple :\n1\u0026lt;plugin\u0026gt; 2 ... 3 \u0026lt;executions\u0026gt; 4 \u0026lt;execution\u0026gt; 5 \u0026lt;!-- optional: you don\u0026#39;t really need execution ids, but it looks nice in your build log. --\u0026gt; 6 \u0026lt;id\u0026gt;install node and npm\u0026lt;/id\u0026gt; 7 \u0026lt;goals\u0026gt; 8 \u0026lt;goal\u0026gt;install-node-and-npm\u0026lt;/goal\u0026gt; 9 \u0026lt;/goals\u0026gt; 10 \u0026lt;!-- optional: default phase is \u0026#34;generate-resources\u0026#34; --\u0026gt; 11 \u0026lt;phase\u0026gt;generate-resources\u0026lt;/phase\u0026gt; 12 \u0026lt;/execution\u0026gt; 13 \u0026lt;/executions\u0026gt; 14 \u0026lt;configuration\u0026gt; 15 \u0026lt;nodeVersion\u0026gt;v4.6.0\u0026lt;/nodeVersion\u0026gt; 16 17 \u0026lt;!-- optional: with node version greater than 4.0.0 will use npm provided by node distribution --\u0026gt; 18 \u0026lt;npmVersion\u0026gt;2.15.9\u0026lt;/npmVersion\u0026gt; 19 20 \u0026lt;!-- optional: where to download node and npm from. Defaults to https://nodejs.org/dist/ --\u0026gt; 21 \u0026lt;downloadRoot\u0026gt;http://myproxy.example.org/nodejs/\u0026lt;/downloadRoot\u0026gt; 22 \u0026lt;/configuration\u0026gt; 23\u0026lt;/plugin\u0026gt; ","link":"https://abarhub.github.io/blogprog/post/installation_node_npm_avec_maven/","section":"post","tags":["maven","npm","build"],"title":"Installation de node et npm avec maven"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/npm/","section":"tags","tags":null,"title":"Npm"},{"body":"1def main(): 2 print(\u0026#34;Hello World!\u0026#34;) 3 4if __name__ == \u0026#34;__main__\u0026#34;: 5 main() ","link":"https://abarhub.github.io/blogprog/post/helloworld_python/","section":"post","tags":["python","helloworld"],"title":"Hello world en Python"},{"body":"Il faut implementer l'interface LSResourceResolver\n1public class ResourceResolver implements LSResourceResolver { 2 3public LSInput resolveResource(String type, String namespaceURI, 4 String publicId, String systemId, String baseURI) { 5 6 // note: in this sample, the XSD\u0026#39;s are expected to be in the root of the classpath 7 InputStream resourceAsStream = this.getClass().getClassLoader() 8 .getResourceAsStream(systemId); 9 return new Input(publicId, systemId, resourceAsStream); 10} 11 12 } Ensuite, l'appel se fait comme cela :\n1// note that if your XML already declares the XSD to which it has to conform, then there\u0026#39;s no need to declare the schemaName here 2void validate(String xml, String schemaName) throws Exception { 3 4 DocumentBuilderFactory builderFactory = DocumentBuilderFactory.newInstance(); 5 builderFactory.setNamespaceAware(true); 6 7 DocumentBuilder parser = builderFactory 8 .newDocumentBuilder(); 9 10 // parse the XML into a document object 11 Document document = parser.parse(new StringInputStream(xml)); 12 13 SchemaFactory factory = SchemaFactory 14 .newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI); 15 16 // associate the schema factory with the resource resolver, which is responsible for resolving the imported XSD\u0026#39;s 17 factory.setResourceResolver(new ResourceResolver()); 18 19 // note that if your XML already declares the XSD to which it has to conform, then there\u0026#39;s no need to create a validator from a Schema object 20 Source schemaFile = new StreamSource(getClass().getClassLoader() 21 .getResourceAsStream(schemaName)); 22 Schema schema = factory.newSchema(schemaFile); 23 24 Validator validator = schema.newValidator(); 25 validator.validate(new DOMSource(document)); 26} Pour la source (new StreamSource(...)), il faut utiliser un InputStream. Si on met à la place un File, la résolution est faites sans passer par le ressourceResolver\n","link":"https://abarhub.github.io/blogprog/post/resolve_xsd/","section":"post","tags":["java","xsd"],"title":"Validation xsd en gérant la résolution des xsd"},{"body":"The \u0026quot;Notices\u0026quot; shortcode enables you to call out pieces of information - sidebars, warnings, tips, etc.\nTo create a notice on a page, you can use the notice shortcode.\nYou use the notice shortcode, with the first parameter being one of note, info, tip, and warning. Then add a title for your note in quotes as the second parameter. The inner body of the note can be whatever markdown you want to create.\nThe following shortcode syntax within a markdown doc:\n1{{% notice note \u0026#34;Note\u0026#34; %}} 2This is a standard \u0026#34;note\u0026#34; style. 3{{% /notice %}} will render as:\nNote This is a standard \u0026quot;note\u0026quot; style.\nThe other three variants follow.\nInfo Here is the \u0026quot;info\u0026quot; style.\nTip Here is a \u0026quot;tip\u0026quot; variant of a notice.\nWarning Here is the \u0026quot;warning\u0026quot; flavor of a notice.\nAlso note that the content of a notice can contain anything you could put on a normal page - as shown below:\nComplex Notices are Possible! This is a notice that has a lot of various kinds of content in it.\nHere is a bulleted list With more than one bullet And even more than one level Code blocks are fine here, too....\n1public void SayHello() 2{ 3 Console.WriteLine(\u0026#34;Hello, world!\u0026#34;); 4} Productivity Booster! If you're using VS Code for your editing, copy the .vscode\\clarity.code-snippets file into a .vscode root folder on your repo. This will enable you to type note then \u0026lt;tab\u0026gt; then choose with up/down arrows which flavor notice you want, then \u0026lt;tab\u0026gt; again to provide a title, then \u0026lt;tab\u0026gt; to add your content!\nTo use the snippet, you need to first enable quickSuggestions for Markdown (one time only):\nGo to Preferences-\u0026gt;Settings then search for quickSuggestions Follow the link to Edit in settings.json Toward the bottom of the file, paste in the following JSON: 1\u0026#34;[markdown]\u0026#34;: { 2 \u0026#34;editor.quickSuggestions\u0026#34;: true 3 } Close and save the settings. ","link":"https://abarhub.github.io/blogprog/post/notices/","section":"post","tags":null,"title":"Using Notices"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/change-detection/","section":"tags","tags":null,"title":"Change Detection"},{"body":" Descriptinon générale du change detection d'Angular : https://guide-angular.wishtack.io/angular/change-detection/fonctionnement-de-la-change-detection\nDifférentes façon d'implémenter le change detection : https://dzone.com/articles/how-to-use-change-detection-in-angular\nDescription du fonctionnement interne : https://blog.angular-university.io/how-does-angular-2-change-detection-really-work/\nDescription de la classe ChangeDetectorRef https://angular.io/api/core/ChangeDetectorRef\nUtilisation de l'immutable : https://levelup.gitconnected.com/the-complete-guide-to-immutability-in-typescript-99154f859fdb https://stackoverflow.com/questions/43120022/i-want-totally-immutable-object-in-ts https://immutable-js.com/\nExemple d'utilisation du onPush : https://blog.angular-university.io/onpush-change-detection-how-it-works/\n","link":"https://abarhub.github.io/blogprog/post/angular_change_detection/","section":"post","tags":["angular","change detection"],"title":"Détection du changement sur Angular"},{"body":"Liste d'outils en ligne de commande Outils généraux Httpie : curl like jq : manipulate json Kafkahq : manage kafka bat : cat en rust exa : ls en rust fd : find en rust procs : ps en rust sd : find \u0026amp; replace en rust dust : du en rust starship : shell en rust ripgrep : grep en rust tokei : analyse du code source (nombre de lignes, nombre de fichiers, etc...) hyperfine : pour faire des benchmark ytop : équivalent de top en Rust tealdeer : tldr en rust bandwhich : affichage des informations sur le réseau (débit, processus, etc...) grex : génération d'expression régulière en fonction d'exemple rmesg : dmesg en rust zoxide : cd en rust delta : disualisation de diff git nushell : shell en rust angle-grinder : recherche dans les fichiers de logs visidata : visualisation de données tabulaires lnav : visualisation des logs dans un terminal coreutils : réimplémentation des outils unix en rust q : faire une requete sql en en ligne de commande sur du csv broot : affichage arborescent des répertoire, avec possibilité de faire des opérations rebond : recherche la stacktrace dans stackoverflow speed-test : test la connexion internet graphtage : comparaison de json jc : convertie en json la sortie des commandes unix rq : transformation entre différents formats (json, csv, etc...) iredis : client redis gnuplot : Pour faire des graphiques en ligne de commandes (Hitogramme, courbes 2Det 3D, etc...). La sortie peut être une image. ploticus : permet de générer des graphiques. age : cryptage de fichiers avec cryptage asymétrique rage : age en rust scrypt : cryptage symetrique de fichiers sops : stokage de secrets mkcert : création de certificat local ugrep : recherche dans les archives zip/gz/etc... csvkit : traitement de fichier CSV fzf : outils pour filter les fichiers à traiter nushell : shell évolué avec possibilité de manipuler des data (csv,json, etc...) graphviz : outils pour afficher des graphes Analyses des logs angle-grinder : recherche des les logs avec une expression lnav : analyse dans les logs en mode texte sumoshell : recherche dans les logs avec une expression manipulation du json/xml Pour extraire du json, il y a les outils :\njq : outils pour extraire des données en json github. Il y a une page pour teste en ligne jqplay Pour extraire du xml :\nxidel : outils pur extraire du xml avec aussi du json github. Il peut aussi transformer du json. Il gère le XPath, le XQuery, etc... Une page qui recense des outils pour extraire du xml : Baeldung\nOutils en ligne https://rawgraphs.io/ : outils de visualisation des données https://www.geogebra.org/ : visualisation de graphe et résolutation de formule mathématique en ligne https://10015.io/ : liste d'outils pour le developpement Outils Windows WinMerge windirstat masscode : gestionnaire de bout de code (code snippets manager) Quiver : notebook pour developpeur cacher : gestionnaire de code qalculate : calculatrice windows/linux avec GUI et en ligne de commande Zealdocs : aide mémoire pour plein d'outils (équivalent de Dash) ","link":"https://abarhub.github.io/blogprog/post/tools/","section":"post","tags":["outils"],"title":"Liste d'outils"},{"body":"Pour récupérer les dépendances d'un projet maven : mvn dependency:tree\nPour récupérer les dépendances d'un projet maven, et mettre le résultat dans un fichier : mvn dependency:tree -DoutputFile=/path/to/file\nPour que le résultat soit dans un format spécial : mvn dependency:tree -DoutputFile=/path/to/file.graphml -DoutputType=graphml\nLes sortie possibles sont :\ntext dot graphml tgf ","link":"https://abarhub.github.io/blogprog/post/maven-dependancy/","section":"post","tags":["maven"],"title":"Maven Dependancy"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/configuration/","section":"tags","tags":null,"title":"Configuration"},{"body":" Exemple avec le paramtre spring.config.location : 1java -jar app.jar --spring.config.location=file:///Users/home/config/jdbc.properties Autre exemple avec les paramètres spring.config.location et spring.config.name : 1java -jar app.jar --spring.config.name=application,jdbc --spring.config.location=file:///Users/home/config Exemple avec une variable d'environnement : 1export SPRING_CONFIG_LOCATION=file:///Users/home/config 2java -jar app.jar Exemple avec spring.config.import : 1spring.config.import=file:./additional.properties,optional:file:/Users/home/config/jdbc.properties Exemple avec spring.config.additional-location : 1java -jar app.jar --spring.config.additional-location=file:///Users/home/config/ Voir ici : https://www.baeldung.com/spring-properties-file-outside-jar https://docs.spring.io/spring-boot/docs/1.0.1.RELEASE/reference/html/boot-features-external-config.html\n","link":"https://abarhub.github.io/blogprog/post/external_config_spring_boot/","section":"post","tags":["spring boot","configuration"],"title":"Externalisation de la configuration avec spring boot"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/debug/","section":"tags","tags":null,"title":"Debug"},{"body":"Debugage avec Angular :\nEverything you need to know about debugging Angular applications A Guide To Debugging Angular Applications Augury Debug Angular 9 in 60 Seconds Debug Angular 9: Interacting with Components Définition ng Exemple de code :\n1ng.getComponent($0); 2ng.getContext($0); ","link":"https://abarhub.github.io/blogprog/post/debug_angular/","section":"post","tags":["angular","debug"],"title":"Débugage avec Angular"},{"body":"Exemple de shell en c :\nTutorial - Write a Shell in C Making your own Linux Shell in C Simple shell in C Tutorial to code a simple shell in C ","link":"https://abarhub.github.io/blogprog/post/exemple_shell_c/","section":"post","tags":["c","shell"],"title":"Exemple de shell en c"},{"body":"Documentation officielle de Java Java 8 : Documentation Javadoc JDK JRE Java 11 : Documentation Javadoc JDK Java 17 : Documentation Javadoc JDK Java 21 : Documentation Javadoc JDK Autre Liste des JDK à telecharger ","link":"https://abarhub.github.io/blogprog/post/java_doc/","section":"post","tags":["java","web"],"title":"Documentation Officiel de Java"},{"body":"Exemple de ngclass : 1\u0026lt;p [ngClass]=\u0026#34;\u0026#39;first second\u0026#39;\u0026#34;\u0026gt;...\u0026lt;/p\u0026gt; 2 3\u0026lt;p [ngClass]=\u0026#34;[\u0026#39;first\u0026#39;, \u0026#39;second\u0026#39;]\u0026#34;\u0026gt;...\u0026lt;/p\u0026gt; 4 5\u0026lt;p [ngClass]=\u0026#34;{\u0026#39;first\u0026#39;: true, \u0026#39;second\u0026#39;: false}\u0026#34;\u0026gt;...\u0026lt;/p\u0026gt; 6 7\u0026lt;p [ngClass]=\u0026#34;stringExp|arrayExp|objExp\u0026#34;\u0026gt;...\u0026lt;/p\u0026gt; 8 9\u0026lt;p [ngClass]=\u0026#34;{\u0026#39;class1 class2 class3\u0026#39; : true}\u0026#34;\u0026gt;...\u0026lt;/p\u0026gt; Pour d'autres exemples, voir ici ou ici\n","link":"https://abarhub.github.io/blogprog/post/ngclass_angular/","section":"post","tags":["angular"],"title":"Exemple de ngclass"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/markdown/","section":"tags","tags":null,"title":"Markdown"},{"body":"Sytaxe de markdow pour les gist : Lien 1 Lien 2 (plus complet) Lien officiel ","link":"https://abarhub.github.io/blogprog/post/markdown_gist/","section":"post","tags":["markdown"],"title":"Sytaxe de markdow"},{"body":"Pour débuguer Spring boot, il y a 2 options :\n--debug : affiche les modules de spring boot activés ou pas activé --trace : affiche plus d'information, notemment la recherche de fichiers et les paramètres de configuration Exemple d'utilisation :\n1java -Ddebug monjar.jar ou\n1java monjar.jar --debug On peut aussi augmenter le niveau de log (a mettre dans application.properties) :\n1logging.level.org.springframework=DEBUG pour spring security, c'est dans le code :\n1// par annotation : 2@EnableWebSecurity(debug = true) 3public class SecurityConfiguration extends WebSecurityConfigurerAdapter { 4 // etc... 5} 1// par code : 2@EnableWebSecurity 3public class WebSecurityConfiguration extends WebSecurityConfigurerAdapter { 4 5 @Override 6 public void configure(WebSecurity web) throws Exception { 7 web.debug(true); 8 } 9} et au niveau log :\n1logging.level.org.springframework.security=DEBUG ","link":"https://abarhub.github.io/blogprog/post/debug_spring/","section":"post","tags":["java","spring","spring boot","debug"],"title":"Débugage spring"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/spring/","section":"tags","tags":null,"title":"Spring"},{"body":" 1rem Pour extraire une partie du contenu d\u0026#39;une variable, la syntaxe est : 2echo %date:~6,4% 3rem résultat: 4rem 2021 5 6rem pour remplacer un caractere par un autre : 7echo %time: =0% 8rem résultat: 9rem 08:48:50,13 10 11 12rem Pour récupérer la date du jour (ne fonctionne qu\u0026#39;en france) : 13echo %date:~6,4%%date:~3,2%%date:~0,2% 14rem résultat: 15rem 20210131 16 17rem Pour récupérer l\u0026#39;heure (il faut remplacer l\u0026#39;espace par un 0 si l\u0026#39;heure est inferieure à 10) : 18set heure=%time:~0,2%-%time:~3,2%-%time:~6,2% 19echo %heure: =0% 20rem résultat: 21rem 08-52-01 22 23rem Pour mettre dans une variable la date et l\u0026#39;heure avec un format compatible pour un nom de fichier : 24set dateheure=%date:~6,4%-%date:~3,2%-%date:~0,2%_%time:~0,2%-%time:~3,2%-%time:~6,2% 25set dateheure=%dateheure: =0% 26echo %dateheure% 27rem résultat: 28rem 2021-01-31_08-54-57 ","link":"https://abarhub.github.io/blogprog/post/exemple_env_bat/","section":"post","tags":["dos","windows","shell","bat"],"title":"Commandes sous dos"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/java-security/","section":"tags","tags":null,"title":"Java Security"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/oauth2/","section":"tags","tags":null,"title":"OAuth2"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/openidconnect/","section":"tags","tags":null,"title":"OpenIdConnect"},{"body":" Les versions de spring security La liste des documentations Le guide du developpeur Le guide de migration La documentation détaillée Comment l'implementé avec un SPA Implicit Flow La liste des librairies certifiée Open Id Connect ","link":"https://abarhub.github.io/blogprog/post/spring_security_oauth2_doc/","section":"post","tags":["java","java security","spring boot","OAuth2","OpenIdConnect"],"title":"Spring security OAuth 2 documentation"},{"body":"Exemple de requete sql pour détruire toutes les tables d'un schéma :\n1select \u0026#39;drop table \u0026#39;||table_name||\u0026#39; cascade constraints;\u0026#39; from user_tables; ","link":"https://abarhub.github.io/blogprog/post/drop_all_table_oracle_sql/","section":"post","tags":["sql"],"title":"Exemple de requete sql pour détruire toutes les tables d'un schéma"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/jdbc/","section":"tags","tags":null,"title":"Jdbc"},{"body":"Exemple d'url jdbc pour se connecter à une base de données sur le schéma monschema :\n1jdbc:mysql://localhost:3306/monschema?useUnicode=true\u0026amp;useJDBCCompliantTimezoneShift=true\u0026amp;useLegacyDatetimeCode=false\u0026amp;serverTimezone=UTC ","link":"https://abarhub.github.io/blogprog/post/url_jdbc_mysql/","section":"post","tags":["MySQL","java","jdbc"],"title":"L'url jdbc pour se connecter à une base MySQL"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/mysql/","section":"tags","tags":null,"title":"MySQL"},{"body":"Voici un exemple pour créer un utiliser MySQL et le schéma associé :\n1CREATE USER \u0026#39;monutilisateur\u0026#39;@\u0026#39;localhost\u0026#39; IDENTIFIED BY \u0026#39;1234\u0026#39;; 2 3CREATE DATABASE monschema CHARACTER SET utf8 COLLATE utf8_unicode_ci; 4GRANT ALL PRIVILEGES ON monschema.* TO \u0026#39;monutilisateur\u0026#39;@\u0026#39;localhost\u0026#39;; 5 6FLUSH PRIVILEGES; ","link":"https://abarhub.github.io/blogprog/post/script_schema_mysql_sql/","section":"post","tags":["sql","MySQL"],"title":"Script de création d'un schéma Mysql avec l'utilisateur"},{"body":"Exemple de test paramétré :\n1class ParametreTest { 2 3 @ParameterizedTest 4 @MethodSource(\u0026#34;provideStringsForIsBlank\u0026#34;) 5 void isBlank_ShouldReturnTrueForNullOrBlankStrings(String input, boolean expected) { 6 assertEquals(expected, Strings.isBlank(input)); 7 } 8 9 private static Stream\u0026lt;Arguments\u0026gt; provideStringsForIsBlank() { 10 return Stream.of( 11 Arguments.of(null, true), 12 Arguments.of(\u0026#34;\u0026#34;, true), 13 Arguments.of(\u0026#34; \u0026#34;, true), 14 Arguments.of(\u0026#34;not blank\u0026#34;, false) 15 ); 16 } 17 18} Code basé sur le site Baeldung\n","link":"https://abarhub.github.io/blogprog/post/exemple_junit5_test_java/","section":"post","tags":["java","junit5","test"],"title":"Exemple de test paramétré"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/junit5/","section":"tags","tags":null,"title":"Junit5"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/test/","section":"tags","tags":null,"title":"Test"},{"body":"Pour avoir les jar dans les exceptions, il faut mettre 'packagingData=\u0026quot;true\u0026quot;' dans la configuration :\n1\u0026lt;configuration packagingData=\u0026#34;true\u0026#34;\u0026gt; 2 ... 3\u0026lt;/configuration\u0026gt; Cela donne des exceptions de la forme :\n114:28:48.835 [btpool0-7] INFO c.q.l.demo.prime.PrimeAction - 99 is not a valid value 2java.lang.Exception: 99 is invalid 3 at ch.qos.logback.demo.prime.PrimeAction.execute(PrimeAction.java:28) [classes/:na] 4 at org.apache.struts.action.RequestProcessor.processActionPerform(RequestProcessor.java:431) [struts-1.2.9.jar:1.2.9] 5 at org.apache.struts.action.RequestProcessor.process(RequestProcessor.java:236) [struts-1.2.9.jar:1.2.9] 6 at org.apache.struts.action.ActionServlet.doPost(ActionServlet.java:432) [struts-1.2.9.jar:1.2.9] 7 at javax.servlet.http.HttpServlet.service(HttpServlet.java:820) [servlet-api-2.5-6.1.12.jar:6.1.12] 8 at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:502) [jetty-6.1.12.jar:6.1.12] 9 at ch.qos.logback.demo.UserServletFilter.doFilter(UserServletFilter.java:44) [classes/:na] 10 at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115) [jetty-6.1.12.jar:6.1.12] 11 at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:361) [jetty-6.1.12.jar:6.1.12] 12 at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:417) [jetty-6.1.12.jar:6.1.12] 13 at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230) [jetty-6.1.12.jar:6.1.12] Voir ici plus plus d'information : http://logback.qos.ch/manual/layouts.html#xThrowable\n","link":"https://abarhub.github.io/blogprog/post/logback_with_jar_in_exception/","section":"post","tags":["java","logback"],"title":"Ajout des jar dans la stacktrace pour LogBack"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/logback/","section":"tags","tags":null,"title":"Logback"},{"body":" 1-- affichage de dates 2select to_char( mon_champs, \u0026#39;dd-mm-yyyy hh24:mi:ss\u0026#39; ) from ma_table; 3 4-- affichage de la date et de l\u0026#39;heure de la session 5ALTER SESSION SET NLS_DATE_FORMAT = \u0026#39;dd-mm-yyyy hh24:mi:ss\u0026#39;; 6 7-- insertion d\u0026#39;une date dans un champs 8insert into ma_table(ID, START_DATE) values (3,TO_DATE(\u0026#39;20200301\u0026#39;,\u0026#39;YYYYMMDD\u0026#39;)); 9 10-- recherche de données entre deux dates 11select * from ma_table where START_DATE BETWEEN TO_DATE(\u0026#39;28-02-2014 10:15:00\u0026#39;, \u0026#39;dd-mm-yyyy hh24:mi:ss\u0026#39;) AND TO_DATE(\u0026#39;20-06-2014 16:34:00\u0026#39;, \u0026#39;dd-mm-yyyy hh24:mi:ss\u0026#39;); ","link":"https://abarhub.github.io/blogprog/post/use_date_oracle_sql/","section":"post","tags":["sql"],"title":"Gestion des dates en oracle"},{"body":"Classe pour logguer toutes les propriétés avec Spring boot :\n1package com.toto.myapp.util; 2 3import org.slf4j.Logger; 4import org.slf4j.LoggerFactory; 5import org.springframework.boot.context.event.ApplicationPreparedEvent; 6import org.springframework.context.ApplicationListener; 7import org.springframework.core.env.ConfigurableEnvironment; 8import org.springframework.core.env.EnumerablePropertySource; 9import org.springframework.core.env.PropertySource; 10 11import java.util.LinkedList; 12import java.util.List; 13 14public class PropertiesLogger implements ApplicationListener\u0026lt;ApplicationPreparedEvent\u0026gt; { 15 private static final Logger log = LoggerFactory.getLogger(PropertiesLogger.class); 16 17 private ConfigurableEnvironment environment; 18 private boolean isFirstRun = true; 19 20 @Override 21 public void onApplicationEvent(ApplicationPreparedEvent event) { 22 if (isFirstRun) { 23 environment = event.getApplicationContext().getEnvironment(); 24 printProperties(); 25 } 26 isFirstRun = false; 27 } 28 29 public void printProperties() { 30 for (EnumerablePropertySource propertySource : findPropertiesPropertySources()) { 31 log.info(\u0026#34;******* \u0026#34; + propertySource.getName() + \u0026#34; *******\u0026#34;); 32 String[] propertyNames = propertySource.getPropertyNames(); 33 Arrays.sort(propertyNames); 34 for (String propertyName : propertyNames) { 35 String resolvedProperty = environment.getProperty(propertyName); 36 String sourceProperty = propertySource.getProperty(propertyName).toString(); 37 if(resolvedProperty.equals(sourceProperty)) { 38 log.info(\u0026#34;{}={}\u0026#34;, propertyName, resolvedProperty); 39 }else { 40 log.info(\u0026#34;{}={} OVERRIDDEN to {}\u0026#34;, propertyName, sourceProperty, resolvedProperty); 41 } 42 } 43 } 44 } 45 46 private List\u0026lt;EnumerablePropertySource\u0026gt; findPropertiesPropertySources() { 47 List\u0026lt;EnumerablePropertySource\u0026gt; propertiesPropertySources = new LinkedList\u0026lt;\u0026gt;(); 48 for (PropertySource\u0026lt;?\u0026gt; propertySource : environment.getPropertySources()) { 49 if (propertySource instanceof EnumerablePropertySource) { 50 propertiesPropertySources.add((EnumerablePropertySource) propertySource); 51 } 52 } 53 return propertiesPropertySources; 54 } 55} Classe permettant de lister toutes les propriétés Pour l'utiliser, il faut utiliser : Java public static void main(String[] args) { SpringApplication springApplication = new SpringApplication(MyApplication.class); springApplication.addListeners(new PropertiesLogger()); springApplication.run(args); } ou alors : `Java @SpringBootApplication public class Application extends SpringBootServletInitializer { private static Class applicationClass = Application.class; @Override protected SpringApplicationBuilder configure(SpringApplicationBuilder application) { return application.sources(applicationClass).listeners(myListener()); }\nprivate ApplicationListener\u0026lt; ApplicationStartedEvent\u0026gt; myListener() { .... } }`\nvoir : code ou code avec un war\n","link":"https://abarhub.github.io/blogprog/post/properties_logger_java/","section":"post","tags":["java","log"],"title":"Logger toutes les propriétés de Spring Boot"},{"body":"Voici les commandes pour installer ou désinstaller un module python :\n1# install module python : 2pip install flask 3 4# desinstalle module python : 5pip uninstall flask 6 7# recré le fichier requirements.txt : 8pip3 freeze \u0026gt; requirements.txt ","link":"https://abarhub.github.io/blogprog/post/install_desinstall_generation_requirement_txt_sh/","section":"post","tags":["python","shell"],"title":"Installation ou désinstallation d'un module Python. Création du fichier requirements.txt avec les dépendances"},{"body":"Voici les commandes pour créer un module, puis un composant associé a ce module :\n1ng generate module app/modules/monmodule --routing=true 2ng generate component app/modules/monmodule/moncomposant -m=app/modules/monmodule ","link":"https://abarhub.github.io/blogprog/post/create_component_with_module_and_routes/","section":"post","tags":["shell","angular"],"title":"Création d'un composant avec un module et une route"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/bootstrap/","section":"tags","tags":null,"title":"Bootstrap"},{"body":"tutorial https://mdbootstrap.com/docs/jquery/utilities/borders/\nhttps://www.w3schools.com/bootstrap4/bootstrap_ref_all_classes.asp\nhttps://getbootstrap.com/docs/4.5/getting-started/browsers-devices/#supported-browsers\nhttps://getbootstrap.com/docs/4.0/components/card/\nng bootstrap https://github.com/ng-bootstrap/ng-bootstrap\nawesome bootstrap https://github.com/therebelrobot/awesome-bootstrap\ncheat sheet https://hackerthemes.com/bootstrap-cheatsheet/\nhttps://websitesetup.org/bootstrap-cheat-sheet/\nhttps://bootstrapcreative.com/resources/bootstrap-4-css-classes-index/\nhttps://www.creative-tim.com/cheatsheet/bootstrap4\n","link":"https://abarhub.github.io/blogprog/post/site_bootstrap_tutorial/","section":"post","tags":["bootstrap","css"],"title":"Tutoriel bootstrap 4"},{"body":"1public class ExempleLogger { 2 3 private static final Logger LOGGER = LoggerFactory.getLogger(ExempleLogger.class); 4 5 public void exemple(){ 6 LOGGER.info(\u0026#34;test {}\u0026#34;, 52); 7 } 8} ","link":"https://abarhub.github.io/blogprog/post/exemple_logger_java/","section":"post","tags":["java","log","slf4j"],"title":"Exemple de loggeur avec slf4j"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/slf4j/","section":"tags","tags":null,"title":"Slf4j"},{"body":"Accès à un fichier de ressource :\n1// récupération du répertoire d\u0026#39;un fichier ressource 2File file = new File(getClass().getClassLoader().getResource(\u0026#34;database.properties\u0026#34;).getFile()); 3 4// lecture d\u0026#39;un fichier ressource 5InputStream inputStream = getClass().getClassLoader().getResourceAsStream(\u0026#34;database.properties\u0026#34;); 6 7// Dans les 2 cas, le fichier doit être src/main/resources/database.properties Des exemples pour récupérérer le chemin : https://stackoverflow.com/questions/15713119/java-nio-file-path-for-a-classpath-resource\n","link":"https://abarhub.github.io/blogprog/post/read_ressouce_in_classpath_java/","section":"post","tags":["java","xsd","test","classpath"],"title":"Accès à un fichier de ressource"},{"body":"Aide mémoires des requetes ElasticSearch : https://elasticsearch-cheatsheet.jolicode.com/ https://gist.github.com/ruanbekker/e8a09604b14f37e8d2f743a87b930f93 https://github.com/adelean/elasticsearch-cheatsheet https://www.bmc.com/blogs/elasticsearch-commands/\n","link":"https://abarhub.github.io/blogprog/post/elasticsearch/","section":"post","tags":["elasticsearch","cheatsheet"],"title":"Aide mémoire sur ElasticSearch"},{"body":"calcul de date : https://icalendrier.fr/outils/ajouter-retirer-date\nrécupération de la date en epoch : https://www.epochconverter.com/\n","link":"https://abarhub.github.io/blogprog/post/calcul_dates/","section":"post","tags":["date"],"title":"Calcul de dates"},{"body":"1ArgumentCapto\u0026lt;Person\u0026gt; peopleCaptor = ArgumentCaptor.forClass(Person.class); 2verify(mock, times(2)).doSomething(peopleCaptor.capture()); 3 4List\u0026lt;Person\u0026gt; capturedPeople = peopleCaptor.getAllValues(); 5assertEquals(\u0026#34;John\u0026#34;, capturedPeople.get(0).getName()); 6assertEquals(\u0026#34;Jane\u0026#34;, capturedPeople.get(1).getName()); ","link":"https://abarhub.github.io/blogprog/post/mockito_capture_java/","section":"post","tags":["java","mockito","test"],"title":"Capture des paramètres avec Mockito"},{"body":"1# changement de version des pom 2mvn versions:set -DnewVersion=1.0.0.0-SNAPSHOT 3 4# changement de version des pom sans backup 5mvn versions:set -DnewVersion=1.0.0.0-SNAPSHOT -DgenerateBackupPoms=false ","link":"https://abarhub.github.io/blogprog/post/update_version_sh/","section":"post","tags":["java","maven","version"],"title":"Changement de version des pom"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/classpath/","section":"tags","tags":null,"title":"Classpath"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/date/","section":"tags","tags":null,"title":"Date"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/mockito/","section":"tags","tags":null,"title":"Mockito"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/plsql/","section":"tags","tags":null,"title":"Plsql"},{"body":"site sur spring :\nhttps://spring.io/\nhttps://www.baeldung.com/spring-tutorial\n","link":"https://abarhub.github.io/blogprog/post/site_spring/","section":"post","tags":["java","spring","spring boot"],"title":"Sites sur Spring"},{"body":"1-- pour stoper l\u0026#39;execution à la première erreur 2-- a utiliser au début d\u0026#39;un script 3WHENEVER SQLERROR EXIT FAILURE ","link":"https://abarhub.github.io/blogprog/post/script_with_error_sql/","section":"post","tags":["sql","plsql"],"title":"Stopper l'execution d'un script à la première erreur en Oracle"},{"body":"","link":"https://abarhub.github.io/blogprog/archives/","section":"","tags":null,"title":""},{"body":"","link":"https://abarhub.github.io/blogprog/tags/featured/","section":"tags","tags":null,"title":"Featured"},{"body":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nImages Local image, alt text as caption The following image is located within the Hugo site. Because it has alt text but no title text, the caption is generated by the alt text.\nRemote image, specified caption The following image is loaded from a remote URL. The alt text is the same (for screen readers and in cases when the image doesn't load) but because a separate title is provided, the title is used for the caption:\nThis is Jane Doe Image with alt text and no caption Alt text is always recommended for SEO, accessibility and in cases when images don't load. However, you don't necessarily always want an image to have a caption. In that case, use a title with one space:\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don't communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren't part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code Code Blocks Code block with backticks 1\u0026lt;!doctype html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3\u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; 5 \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8 \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; 9\u0026lt;/body\u0026gt; 10\u0026lt;!-- this line is extraneous 2Error from server (Forbidden): deployments.apps is forbidden: User \u0026#34;chiptest\u0026#34; cannot create resource \u0026#34;deployments\u0026#34; in API group \u0026#34;apps\u0026#34; in the namespace \u0026#34;default\u0026#34; --\u0026gt; 11\u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rCode block with Hugo's internal highlight shortcode 1\u0026lt;!doctype html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3\u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; 5 \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8 \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; 9\u0026lt;/body\u0026gt; 10\u0026lt;/html\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike's talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","link":"https://abarhub.github.io/blogprog/post/markdown-syntax/","section":"post","tags":["markdown","css","html","themes","featured"],"title":"Markdown Syntax Guide"},{"body":"","link":"https://abarhub.github.io/blogprog/categories/themes/","section":"categories","tags":null,"title":"Themes"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/themes/","section":"tags","tags":null,"title":"Themes"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/privacy/","section":"tags","tags":null,"title":"Privacy"},{"body":"Hugo ships with several Embedded Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nInstagram Simple Shortcode YouTube Privacy Enhanced Shortcode X Simple Shortcode Owl bet you\u0026#39;ll lose this staring contest 🦉 pic.twitter.com/eJh4f2zncC\n\u0026mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 See shortcode documentation for more details.\nVimeo Simple Shortcode ","link":"https://abarhub.github.io/blogprog/post/rich-content/","section":"post","tags":["shortcodes","privacy"],"title":"Rich Content"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/shortcodes/","section":"tags","tags":null,"title":"Shortcodes"},{"body":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","link":"https://abarhub.github.io/blogprog/post/placeholder-text/","section":"post","tags":["markdown","text"],"title":"Placeholder Text"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/text/","section":"tags","tags":null,"title":"Text"},{"body":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/hooks/head-end.html Add these lines to the newly created partial: 1{{ if or .Params.math .Site.Params.math }} 2{{ partial \u0026#34;math.html\u0026#34; . }} 3{{ end }} To enable KaTeX globally set the parameter math to true in a project's configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","link":"https://abarhub.github.io/blogprog/post/math-typesetting/","section":"post","tags":null,"title":"Math Typesetting"},{"body":"","link":"https://abarhub.github.io/blogprog/tags/emoji/","section":"tags","tags":null,"title":"Emoji"},{"body":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site's configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1.emoji { 2 font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; 3}","link":"https://abarhub.github.io/blogprog/post/emoji-support/","section":"post","tags":["emoji"],"title":"Emoji Support"},{"body":"Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.\nHugo makes use of a variety of open source projects including:\nhttps://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremely fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub.\n","link":"https://abarhub.github.io/blogprog/about/","section":"","tags":null,"title":"About"}]